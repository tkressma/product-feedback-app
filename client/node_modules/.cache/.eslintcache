[{"/home/tom/Desktop/product-feedback-app/client/src/index.js":"1","/home/tom/Desktop/product-feedback-app/client/src/App.js":"2","/home/tom/Desktop/product-feedback-app/client/src/reducers/index.js":"3","/home/tom/Desktop/product-feedback-app/client/src/actions/suggestions.js":"4","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Home.js":"5","/home/tom/Desktop/product-feedback-app/client/src/components/Create/Create.js":"6","/home/tom/Desktop/product-feedback-app/client/src/components/UI/Container/Container.js":"7","/home/tom/Desktop/product-feedback-app/client/src/reducers/suggestions.js":"8","/home/tom/Desktop/product-feedback-app/client/src/constants/actionTypes.js":"9","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Header.js":"10","/home/tom/Desktop/product-feedback-app/client/src/components/UI/Heading/Heading.js":"11","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/Main.js":"12","/home/tom/Desktop/product-feedback-app/client/src/components/UI/Button/Button.js":"13","/home/tom/Desktop/product-feedback-app/client/src/api/index.js":"14","/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/Form/Form.js":"15","/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/FormTextInput/FormTextInput.js":"16","/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/FormSelectInput/FormSelectInput.js":"17","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/SuggestionsFeed.js":"18","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Logo/Logo.js":"19","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsBar/SuggestionsBar.js":"20","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Menu/Menu.js":"21","/home/tom/Desktop/product-feedback-app/client/src/components/UI/BackButton/BackButton.js":"22","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/Suggestion.js":"23","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Menu/SuggestionTags/SuggestionTags.js":"24","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/NoSuggestions.js/NoSuggestions.js":"25","/home/tom/Desktop/product-feedback-app/client/src/components/UI/Tag/Tag.js":"26","/home/tom/Desktop/product-feedback-app/client/src/components/UI/TextBody/TextBody.js":"27","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/CommentLink/CommentLink.js":"28","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/UpvoteButton/UpvoteButton.js":"29","/home/tom/Desktop/product-feedback-app/client/src/components/Auth/Auth.js":"30","/home/tom/Desktop/product-feedback-app/client/src/reducers/auth.js":"31","/home/tom/Desktop/product-feedback-app/client/src/actions/auth.js":"32","/home/tom/Desktop/product-feedback-app/client/src/components/UI/LogoutButton/LogoutButton.js":"33","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Menu/ProjectRoadmap/ProjectRoadmap.js":"34","/home/tom/Desktop/product-feedback-app/client/src/components/UI/DeletionNotification/DeletionNotification.js":"35","/home/tom/Desktop/product-feedback-app/client/src/components/UI/DeletionNotification/Backdrop/Backdrop.js":"36","/home/tom/Desktop/product-feedback-app/client/src/components/Edit/Edit.js":"37"},{"size":508,"mtime":1645632474372,"results":"38","hashOfConfig":"39"},{"size":700,"mtime":1647286717840,"results":"40","hashOfConfig":"39"},{"size":273,"mtime":1646784043492,"results":"41","hashOfConfig":"39"},{"size":2423,"mtime":1647294134128,"results":"42","hashOfConfig":"39"},{"size":169,"mtime":1646885897358,"results":"43","hashOfConfig":"39"},{"size":4531,"mtime":1646939192264,"results":"44","hashOfConfig":"39"},{"size":157,"mtime":1646328337926,"results":"45","hashOfConfig":"39"},{"size":1427,"mtime":1647285985347,"results":"46","hashOfConfig":"39"},{"size":565,"mtime":1647285286600,"results":"47","hashOfConfig":"39"},{"size":1096,"mtime":1646328250779,"results":"48","hashOfConfig":"39"},{"size":1176,"mtime":1646757568437,"results":"49","hashOfConfig":"39"},{"size":316,"mtime":1646328326879,"results":"50","hashOfConfig":"39"},{"size":939,"mtime":1646860645386,"results":"51","hashOfConfig":"39"},{"size":1124,"mtime":1647287255257,"results":"52","hashOfConfig":"39"},{"size":519,"mtime":1646351153165,"results":"53","hashOfConfig":"39"},{"size":913,"mtime":1647289393054,"results":"54","hashOfConfig":"39"},{"size":1266,"mtime":1647293556026,"results":"55","hashOfConfig":"39"},{"size":1715,"mtime":1646887167649,"results":"56","hashOfConfig":"39"},{"size":1301,"mtime":1646847545642,"results":"57","hashOfConfig":"39"},{"size":4949,"mtime":1646860684289,"results":"58","hashOfConfig":"39"},{"size":1461,"mtime":1647034591388,"results":"59","hashOfConfig":"39"},{"size":473,"mtime":1646343690216,"results":"60","hashOfConfig":"39"},{"size":3740,"mtime":1647284588038,"results":"61","hashOfConfig":"39"},{"size":475,"mtime":1646884920041,"results":"62","hashOfConfig":"39"},{"size":1026,"mtime":1646860691701,"results":"63","hashOfConfig":"39"},{"size":1256,"mtime":1646885299039,"results":"64","hashOfConfig":"39"},{"size":285,"mtime":1646327618226,"results":"65","hashOfConfig":"39"},{"size":423,"mtime":1646886880122,"results":"66","hashOfConfig":"39"},{"size":1367,"mtime":1646867064443,"results":"67","hashOfConfig":"39"},{"size":4593,"mtime":1646860884590,"results":"68","hashOfConfig":"39"},{"size":444,"mtime":1646784043492,"results":"69","hashOfConfig":"39"},{"size":608,"mtime":1646845268292,"results":"70","hashOfConfig":"39"},{"size":482,"mtime":1646784043492,"results":"71","hashOfConfig":"39"},{"size":272,"mtime":1646330987070,"results":"72","hashOfConfig":"39"},{"size":961,"mtime":1647283673173,"results":"73","hashOfConfig":"39"},{"size":174,"mtime":1647283495791,"results":"74","hashOfConfig":"39"},{"size":5137,"mtime":1647295370072,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1oy0c2x",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},"/home/tom/Desktop/product-feedback-app/client/src/index.js",[],["156","157"],"/home/tom/Desktop/product-feedback-app/client/src/App.js",[],"/home/tom/Desktop/product-feedback-app/client/src/reducers/index.js",[],"/home/tom/Desktop/product-feedback-app/client/src/actions/suggestions.js",[],["158","159"],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Home.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Create/Create.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Container/Container.js",[],"/home/tom/Desktop/product-feedback-app/client/src/reducers/suggestions.js",["160"],"/home/tom/Desktop/product-feedback-app/client/src/constants/actionTypes.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Header.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Heading/Heading.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/Main.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Button/Button.js",[],"/home/tom/Desktop/product-feedback-app/client/src/api/index.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/Form/Form.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/FormTextInput/FormTextInput.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/FormSelectInput/FormSelectInput.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/SuggestionsFeed.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Logo/Logo.js",["161","162"],"import { useState, useEffect } from \"react\";\nimport styles from \"./Logo.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport LogoutButton from \"../../../UI/LogoutButton/LogoutButton\";\nexport default function Logo() {\n  // Retrieve the user from localStorage\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const location = useLocation();\n  const isMobile = useMediaQuery({ query: \"(max-width: 767px)\" });\n\n  useEffect(() => {\n    const token = user?.token;\n\n    // Check for JWT\n\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n\n  return (\n    <div className={styles.logo}>\n      <div className={styles[\"logo__text_container\"]}>\n        <h1 className={styles.h1}>Frontend Mentor</h1>\n        <p className={styles.p}>Feedback Board</p>\n      </div>\n\n      {user ? (\n        <div className={styles[\"logo__user_controls\"]}>\n          <p className={styles.p}>Welcome, {user.result.givenName}.</p>\n          {!isMobile && <LogoutButton />}\n        </div>\n      ) : (\n        <Link\n          to=\"/auth\"\n          className={`${styles.p} ${styles[\"logo__login_link\"]}`}\n        >\n          Login\n        </Link>\n      )}\n    </div>\n  );\n}\n","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsBar/SuggestionsBar.js",["163"],"import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterSuggestions, setFilters } from \"../../../../actions/suggestions\";\nimport { useMediaQuery } from \"react-responsive\";\nimport styles from \"./SuggestionsBar.module.css\";\nimport Button from \"../../../UI/Button/Button\";\nimport Heading from \"../../../UI/Heading/Heading\";\nimport bulbIcon from \"../../../../assets/suggestions/icon-suggestions.svg\";\nimport downArrowIcon from \"../../../../assets/shared/icon-arrow-down.svg\";\nimport checkIcon from \"../../../../assets/shared/icon-check.svg\";\n\nexport default function SuggestionsBar() {\n  const isMobile = useMediaQuery({ query: \"(max-width: 767px)\" });\n  const sortingOptions = [\n    \"Most Upvotes\",\n    \"Least Upvotes\",\n    \"Most Comments\",\n    \"Least Comments\",\n  ];\n  const [sortingOption, setSortingOption] = useState(\"Most Upvotes\");\n\n  // Retrieves all of the suggestions and filters that are selected\n  const {\n    suggestions,\n    filters: { sortCategory, sortType, sortOrder },\n  } = useSelector((state) => state.suggestions);\n\n  const [menuOpen, setMenuOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  // Sort by Most Upvotes on component mount\n  useEffect(() => {\n    dispatch(\n      filterSuggestions({\n        category: \"all\",\n        type: \"upvotes\",\n        order: \"desc\",\n      })\n    );\n  }, []);\n\n  // Listen for each time a new sorting option is selected and update state\n  useEffect(() => {\n    // Determine the sort order (ascending/descending) and type (upvotes/comments)\n    const order = sortingOption.includes(\"Most\") ? \"desc\" : \"asc\";\n    const type = sortingOption.includes(\"Upvotes\") ? \"upvotes\" : \"comments\";\n\n    // Update the sorting filters\n    dispatch(\n      setFilters({\n        sortCategory: sortCategory,\n        sortType: type,\n        sortOrder: order,\n      })\n    );\n\n    // Sort data depending on order (most/least) and type(upvotes/comments)\n    dispatch(\n      filterSuggestions({\n        category: sortCategory,\n        type: sortType,\n        order: sortOrder,\n      })\n    );\n  }, [sortingOption, sortCategory, sortType, sortOrder, dispatch]);\n\n  const handleDropDown = (event) => {\n    setMenuOpen(!menuOpen); // Toggle the dropdown menu\n    event.target.setAttribute(\"aria-expanded\", menuOpen); // Toggle aria-expanded label for accessibility\n  };\n\n  const handleSortSelection = (event) => {\n    setMenuOpen(false); // Close the dropdown menu\n    setSortingOption(event.target.innerText); // Set the sorting option to user selection (E.G. \"Least Upvotes\")\n  };\n\n  // Displays how many suggestions are available on screen sizes larger than 768px\n  const suggestionCount = !isMobile && (\n    <Heading type=\"h3\" white={true}>\n      <img src={bulbIcon} alt=\"Light bulb signifying an idea\" />\n      {suggestions.length} Suggestions\n    </Heading>\n  );\n\n  return (\n    <section className={`${styles.bar} ${isMobile && styles[\"bar--sticky\"]}`}>\n      {suggestionCount}\n\n      <div className={styles[\"bar__listbox\"]}>\n        {/* Container for the label, the dropdown button, and the up/down arrow */}\n        <div className={styles[\"bar__sort_options\"]}>\n          <span id=\"sort_label\">Sort by :</span>\n          <button\n            onClick={handleDropDown}\n            aria-haspopup=\"listbox\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"sort_label\"\n          >\n            {sortingOption}\n          </button>\n          <img\n            src={downArrowIcon}\n            className={`${styles.menuarrow} ${\n              menuOpen && styles[\"menuarrow--active\"]\n            }`}\n            alt={`${menuOpen ? \"Down\" : \"Up\"} arrow`}\n          />\n        </div>\n\n        {/* Dropdown pop up */}\n        <div\n          className={`${styles[\"bar__dropdown\"]} ${\n            menuOpen && styles[\"bar__dropdown--active\"]\n          }`}\n        >\n          <ul role=\"listbox\" aria-labelledby=\"sort_label\">\n            {sortingOptions.map((option, index) => (\n              <li\n                key={index}\n                className={styles[\"bar__listitem\"]}\n                aria-selected={sortingOption === option ? true : false}\n                role=\"option\"\n                tabIndex=\"0\"\n                onClick={handleSortSelection}\n                onKeyPress={handleSortSelection}\n              >\n                {/* Option text */}\n                {option}\n\n                {/* If a list item is currently selected, display a checkmark */}\n                {sortingOption === option && (\n                  <img\n                    src={checkIcon}\n                    alt=\"Checkmark\"\n                    className={styles[\"bar__listitem_checkmark\"]}\n                  />\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <Button\n        btnStyle=\"violet\"\n        text=\"+ Add Feedback\"\n        link={true}\n        destination=\"create-feedback\"\n      />\n    </section>\n  );\n}\n","/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Menu/Menu.js",["164"],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/BackButton/BackButton.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/Suggestion.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Menu/SuggestionTags/SuggestionTags.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/NoSuggestions.js/NoSuggestions.js",["165"],"import styles from \"./NoSuggestions.module.css\";\nimport Heading from \"../../../../UI/Heading/Heading\";\nimport { useMediaQuery } from \"react-responsive\";\nimport Button from \"../../../../UI/Button/Button\";\nimport emptyIllustration from \"../../../../../assets/suggestions/illustration-empty.svg\";\nconst NoSuggestions = () => {\n  const isMobile = useMediaQuery({ query: \"(max-width: 767px)\" });\n\n  return (\n    <article className={styles[\"nosuggestions\"]}>\n      <img src={emptyIllustration} className={styles[\"nosuggestions__img\"]} />\n\n      <Heading type={isMobile ? \"h3\" : \"h1\"} headingTag={false}>\n        There is no feedback yet\n      </Heading>\n      <p className={styles[\"nosuggestions__p\"]}>\n        Got a suggestions? Found a bug that needs to be squashed? We love\n        hearing about new ideas to improve our app.\n      </p>\n\n      <Button\n        btnStyle=\"violet\"\n        text=\"+ Add Feedback\"\n        link={true}\n        destination=\"create-feedback\"\n      />\n    </article>\n  );\n};\n\nexport default NoSuggestions;\n","/home/tom/Desktop/product-feedback-app/client/src/components/UI/Tag/Tag.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/TextBody/TextBody.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/CommentLink/CommentLink.js",["166"],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/UpvoteButton/UpvoteButton.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Auth/Auth.js",[],"/home/tom/Desktop/product-feedback-app/client/src/reducers/auth.js",[],"/home/tom/Desktop/product-feedback-app/client/src/actions/auth.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/LogoutButton/LogoutButton.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Menu/ProjectRoadmap/ProjectRoadmap.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/DeletionNotification/DeletionNotification.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/UI/DeletionNotification/Backdrop/Backdrop.js",[],"/home/tom/Desktop/product-feedback-app/client/src/components/Edit/Edit.js",["167"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getSuggestion } from \"../../actions/suggestions\";\nimport styles from \"./Edit.module.css\";\nimport Heading from \"../UI/Heading/Heading\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport FormSelectInput from \"../UI/Forms/FormSelectInput/FormSelectInput\";\nimport editIcon from \"../../assets/shared/icon-edit-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\nimport checkIcon from \"../../assets/shared/icon-check.svg\";\n\nimport { SpinnerCircularFixed } from \"spinners-react\";\n\nexport default function Edit() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  // Retrieve the data for the suggestion being edited\n  const { suggestion, isLoading } = useSelector((state) => state.suggestions);\n  // Did the user submit the form?\n  const [submitted, setSubmitted] = useState(false);\n  // A base state placeholder object for editing a form.\n  const [updatedSuggestion, setUpdatedSuggestion] = useState({\n    title: \"\",\n    category: \"Feature\",\n    description: \"\",\n  });\n\n  // If a user is not logged in upon trying to access this form,\n  // redirect them to sign in/sign up.\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  useEffect(() => {\n    if (!user?.result?.name) {\n      navigate(\"/auth\");\n    }\n  });\n\n  // Retrieve the suggestion that is being edited\n  useEffect(() => {\n    dispatch(getSuggestion(id));\n  }, [id]);\n\n  // Update the suggestion information being displayed in\n  // the editing form based on the dispatch redux state change\n  useEffect(() => {\n    setUpdatedSuggestion((prevState) => ({\n      ...prevState,\n      title: suggestion?.title,\n      category: suggestion?.category,\n      description: suggestion?.description,\n    }));\n  }, [suggestion]);\n\n  // Displays a loading circle if the form submission is still processing in the back end.\n  // Once finished, it will display a check mark.\n  const submissionConfirmation = isLoading ? (\n    <SpinnerCircularFixed\n      color=\"hsl(230, 76%, 59%)\"\n      secondaryColor=\"#f2f5ff\"\n      style={{ height: 43.98, margin: \"0 auto\" }}\n    />\n  ) : (\n    <img\n      src={checkIcon}\n      className={styles[\"loading--check\"]}\n      alt=\"Checkmark - action is completed\"\n    />\n  );\n\n  // Displays a loading circle if the suggestion data from the back end is still being retrieved.\n  const loadingSuggestionInfo = (\n    <SpinnerCircularFixed\n      color=\"hsl(230,76%,59%)\"\n      secondaryColor=\"#f2f5ff\"\n      style={{ \"max-height\": \"35px\" }}\n    />\n  );\n\n  // After the feedback is added, wait 1.5 seconds before redirecting\n  // back to the home page.\n  useEffect(() => {\n    if (!isLoading && submitted) {\n      let timerFunc = setTimeout(() => navigate(\"/\"), 1500);\n      return () => clearTimeout(timerFunc);\n    }\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSubmitted(true);\n  };\n\n  return (\n    <Form icon={editIcon} backButtonDestination=\"/\">\n      <Heading type=\"h1\">\n        Edit Your Feedback {isLoading && loadingSuggestionInfo}\n      </Heading>\n\n      <form id=\"form\">\n        <FormTextInput\n          inputId=\"title\"\n          value={isLoading ? \"\" : updatedSuggestion.title}\n          labelHeading=\"Feedback Title\"\n          labelCaption=\"Add a short, descriptive headline\"\n          onChange={(event) =>\n            setUpdatedSuggestion({\n              ...updatedSuggestion,\n              title: event.target.value,\n            })\n          }\n        />\n        <FormSelectInput\n          inputId=\"category\"\n          value={isLoading ? \"Feature\" : updatedSuggestion.category}\n          labelHeading=\"Category\"\n          labelCaption=\"Choose a category for your feedback\"\n          onChange={(event) =>\n            setUpdatedSuggestion({\n              ...updatedSuggestion,\n              category: event.target.value,\n            })\n          }\n        />\n        <FormTextInput\n          inputId=\"detail\"\n          value={isLoading ? \"\" : updatedSuggestion.description}\n          large=\"true\"\n          labelHeading=\"Feedback Detail\"\n          labelCaption=\"Include any specific comments on what should be improved, added, etc.\"\n          onChange={(event) =>\n            setUpdatedSuggestion({\n              ...updatedSuggestion,\n              description: event.target.value,\n            })\n          }\n        />\n\n        <div className={styles[\"button__container\"]}>\n          {submitted ? (\n            submissionConfirmation\n          ) : (\n            <>\n              <Button\n                btnStyle=\"violet\"\n                text=\"Add Feedback\"\n                form=\"form\"\n                onClick={handleSubmit}\n              />\n\n              <Button\n                btnStyle=\"navy-blue\"\n                text=\"Cancel\"\n                onClick={handleSubmit}\n                link={true}\n                destination=\"/\"\n              />\n            </>\n          )}\n        </div>\n      </form>\n    </Form>\n  );\n}\n",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"168","replacedBy":"172"},{"ruleId":"170","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":12,"column":1,"nodeType":"176","endLine":55,"endColumn":3},{"ruleId":"177","severity":1,"message":"178","line":14,"column":11,"nodeType":"179","messageId":"180","endLine":14,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":19,"column":6,"nodeType":"183","endLine":19,"endColumn":16,"suggestions":"184"},{"ruleId":"181","severity":1,"message":"185","line":40,"column":6,"nodeType":"183","endLine":40,"endColumn":8,"suggestions":"186"},{"ruleId":"177","severity":1,"message":"187","line":10,"column":16,"nodeType":"179","messageId":"180","endLine":10,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":11,"column":7,"nodeType":"190","endLine":11,"endColumn":79},{"ruleId":"191","severity":1,"message":"192","line":6,"column":5,"nodeType":"190","endLine":6,"endColumn":44},{"ruleId":"181","severity":1,"message":"185","line":44,"column":6,"nodeType":"183","endLine":44,"endColumn":10,"suggestions":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],["194"],["195"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user?.token'. Either include it or remove the dependency array.","ArrayExpression",["196"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["197"],"'setUser' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [location, user?.token]",{"range":"205","text":"206"},"Update the dependencies array to be: [dispatch]",{"range":"207","text":"208"},"Update the dependencies array to be: [dispatch, id]",{"range":"209","text":"210"},[684,694],"[location, user?.token]",[1378,1380],"[dispatch]",[1619,1623],"[dispatch, id]"]