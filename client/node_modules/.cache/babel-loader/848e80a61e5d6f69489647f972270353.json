{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Tag/Tag.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./Tag.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tag(_ref) {\n  _s();\n\n  let {\n    category\n  } = _ref;\n\n  const filterSuggestions = category => {\n    console.log(\"Filter: \" + category);\n  }; // Listen for each time a new filter is selected and update state\n\n\n  useEffect(() => {\n    dispatch(sortSuggestions({\n      dataType: type,\n      order: order\n    }));\n  }, [sortingOption, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: styles.tag,\n    onClick: () => filterSuggestions(category),\n    children: category\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tag, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Tag/Tag.js"],"names":["styles","Tag","category","filterSuggestions","console","log","useEffect","dispatch","sortSuggestions","dataType","type","order","sortingOption","tag"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;;AACA,eAAe,SAASC,GAAT,OAA2B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;;AACxC,QAAMC,iBAAiB,GAAID,QAAD,IAAc;AACtCE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaH,QAAzB;AACD,GAFD,CADwC,CAKxC;;;AACAI,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,QAAQ,CACNC,eAAe,CAAC;AACdC,MAAAA,QAAQ,EAAEC,IADI;AAEdC,MAAAA,KAAK,EAAEA;AAFO,KAAD,CADT,CAAR;AAMD,GAPQ,EAON,CAACC,aAAD,EAAgBL,QAAhB,CAPM,CAAT;AASA,sBACE;AAAQ,IAAA,SAAS,EAAEP,MAAM,CAACa,GAA1B;AAA+B,IAAA,OAAO,EAAE,MAAMV,iBAAiB,CAACD,QAAD,CAA/D;AAAA,cACGA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApBuBD,G;;KAAAA,G","sourcesContent":["import styles from \"./Tag.module.css\";\nexport default function Tag({ category }) {\n  const filterSuggestions = (category) => {\n    console.log(\"Filter: \" + category);\n  };\n\n  // Listen for each time a new filter is selected and update state\n  useEffect(() => {\n    dispatch(\n      sortSuggestions({\n        dataType: type,\n        order: order,\n      })\n    );\n  }, [sortingOption, dispatch]);\n\n  return (\n    <button className={styles.tag} onClick={() => filterSuggestions(category)}>\n      {category}\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}