{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Heading/Heading.js\";\nimport styles from \"./Headings.module.css\"; // This reusable heading takes in a few parameters:\n// type: The styling (and optionally tag) that the heading component is going to use (h1, h2, h3).\n// white: If true, the color of the font is white. Else, it is the default heading color.\n// headingTag: If true, use the associated heading tag determined by the value of type.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heading = _ref => {\n  let {\n    type,\n    white,\n    headingTag = true,\n    children\n  } = _ref;\n  // This allows us to set the HTML tag depending on the value of type.\n  // If headingTag is false, then it is simply a styled paragraph element.\n  const HeadingLevel = headingTag ? type : \"p\"; // Allows us to select the CSS based on type value\n\n  const headingStyle = `heading--${type}`;\n  const headingStyling = `${styles.heading} \n  ${styles[headingStyle]} \n  ${white && styles.white}`;\n  return /*#__PURE__*/_jsxDEV(HeadingLevel, {\n    className: headingStyling,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Heading;\nexport default Heading;\n\nvar _c;\n\n$RefreshReg$(_c, \"Heading\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Heading/Heading.js"],"names":["styles","Heading","type","white","headingTag","children","HeadingLevel","headingStyle","headingStyling","heading"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,uBAAnB,C,CAEA;AACA;AACA;AACA;;;;AACA,MAAMC,OAAO,GAAG,QAAkD;AAAA,MAAjD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,UAAU,GAAG,IAA5B;AAAkCC,IAAAA;AAAlC,GAAiD;AAChE;AACA;AACA,QAAMC,YAAY,GAAGF,UAAU,GAAGF,IAAH,GAAU,GAAzC,CAHgE,CAKhE;;AACA,QAAMK,YAAY,GAAI,YAAWL,IAAK,EAAtC;AAEA,QAAMM,cAAc,GAAI,GAAER,MAAM,CAACS,OAAQ;AAC3C,IAAIT,MAAM,CAACO,YAAD,CAAe;AACzB,IAAIJ,KAAK,IAAIH,MAAM,CAACG,KAAM,EAFxB;AAIA,sBAAO,QAAC,YAAD;AAAc,IAAA,SAAS,EAAEK,cAAzB;AAAA,cAA0CH;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAbD;;KAAMJ,O;AAeN,eAAeA,OAAf","sourcesContent":["import styles from \"./Headings.module.css\";\n\n// This reusable heading takes in a few parameters:\n// type: The styling (and optionally tag) that the heading component is going to use (h1, h2, h3).\n// white: If true, the color of the font is white. Else, it is the default heading color.\n// headingTag: If true, use the associated heading tag determined by the value of type.\nconst Heading = ({ type, white, headingTag = true, children }) => {\n  // This allows us to set the HTML tag depending on the value of type.\n  // If headingTag is false, then it is simply a styled paragraph element.\n  const HeadingLevel = headingTag ? type : \"p\";\n\n  // Allows us to select the CSS based on type value\n  const headingStyle = `heading--${type}`;\n\n  const headingStyling = `${styles.heading} \n  ${styles[headingStyle]} \n  ${white && styles.white}`;\n\n  return <HeadingLevel className={headingStyling}>{children}</HeadingLevel>;\n};\n\nexport default Heading;\n"]},"metadata":{},"sourceType":"module"}