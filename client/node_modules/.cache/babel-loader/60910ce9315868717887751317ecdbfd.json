{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/SuggestionPage/CommentSection/CommentSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./CommentSection.module.css\";\nimport Comment from \"./Comments/Comment/Comment\";\nimport AddCommentForm from \"./AddCommentForm/AddCommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentSection = _ref => {\n  _s();\n\n  let {\n    commentData\n  } = _ref;\n  const [updatedComments, setUpdatedComments] = useState(commentData);\n  let totalComments = updatedComments.length + addReplies(updatedComments); // Checks every comment in the suggestion for replies and returns a running total.\n\n  function addReplies(arr) {\n    let totalReplies = 0; // If replies exist, add that to the total replies. Else, set the value to 0.\n\n    arr.forEach(comment => {\n      var _comment$replies;\n\n      totalReplies += (comment === null || comment === void 0 ? void 0 : (_comment$replies = comment.replies) === null || _comment$replies === void 0 ? void 0 : _comment$replies.length) || 0;\n    });\n    return totalReplies;\n  }\n\n  const commentTitle = updatedComments.length === 1 ? \"1 Comment\" : `${totalComments} Comments`;\n  const commentCards = updatedComments.map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n    user: comment.user,\n    commentId: comment._id,\n    content: comment.content,\n    replies: comment.replies\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles[\"comments_section\"],\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles[\"comments_header\"],\n        children: [commentTitle, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.comments,\n        children: commentCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCommentForm, {\n      updateComments: setUpdatedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CommentSection, \"s/NsUgMM6ZJdO4JkX+jFTbXaX2s=\");\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/SuggestionPage/CommentSection/CommentSection.js"],"names":["React","useState","styles","Comment","AddCommentForm","CommentSection","commentData","updatedComments","setUpdatedComments","totalComments","length","addReplies","arr","totalReplies","forEach","comment","replies","commentTitle","commentCards","map","index","user","_id","content","comments"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;;AACA,MAAMC,cAAc,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAC1C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAACK,WAAD,CAAtD;AAEA,MAAIG,aAAa,GAAGF,eAAe,CAACG,MAAhB,GAAyBC,UAAU,CAACJ,eAAD,CAAvD,CAH0C,CAI1C;;AACA,WAASI,UAAT,CAAoBC,GAApB,EAAyB;AACvB,QAAIC,YAAY,GAAG,CAAnB,CADuB,CAGvB;;AACAD,IAAAA,GAAG,CAACE,OAAJ,CAAaC,OAAD,IAAa;AAAA;;AACvBF,MAAAA,YAAY,IAAI,CAAAE,OAAO,SAAP,IAAAA,OAAO,WAAP,gCAAAA,OAAO,CAAEC,OAAT,sEAAkBN,MAAlB,KAA4B,CAA5C;AACD,KAFD;AAIA,WAAOG,YAAP;AACD;;AAED,QAAMI,YAAY,GAChBV,eAAe,CAACG,MAAhB,KAA2B,CAA3B,GAA+B,WAA/B,GAA8C,GAAED,aAAc,WADhE;AAEA,QAAMS,YAAY,GAAGX,eAAe,CAACY,GAAhB,CAAoB,CAACJ,OAAD,EAAUK,KAAV,kBACvC,QAAC,OAAD;AAEE,IAAA,IAAI,EAAEL,OAAO,CAACM,IAFhB;AAGE,IAAA,SAAS,EAAEN,OAAO,CAACO,GAHrB;AAIE,IAAA,OAAO,EAAEP,OAAO,CAACQ,OAJnB;AAKE,IAAA,OAAO,EAAER,OAAO,CAACC;AALnB,KACOI,KADP;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAUA,sBACE;AAAA,4BACE;AAAS,MAAA,SAAS,EAAElB,MAAM,CAAC,kBAAD,CAA1B;AAAA,8BACE;AAAI,QAAA,SAAS,EAAEA,MAAM,CAAC,iBAAD,CAArB;AAAA,mBAA2Ce,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,SAAS,EAAEf,MAAM,CAACsB,QAAvB;AAAA,kBAAkCN;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,cAAD;AAAgB,MAAA,cAAc,EAAEV;AAAhC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD,CAtCD;;GAAMH,c;;KAAAA,c;AAwCN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./CommentSection.module.css\";\nimport Comment from \"./Comments/Comment/Comment\";\nimport AddCommentForm from \"./AddCommentForm/AddCommentForm\";\nconst CommentSection = ({ commentData }) => {\n  const [updatedComments, setUpdatedComments] = useState(commentData);\n\n  let totalComments = updatedComments.length + addReplies(updatedComments);\n  // Checks every comment in the suggestion for replies and returns a running total.\n  function addReplies(arr) {\n    let totalReplies = 0;\n\n    // If replies exist, add that to the total replies. Else, set the value to 0.\n    arr.forEach((comment) => {\n      totalReplies += comment?.replies?.length || 0;\n    });\n\n    return totalReplies;\n  }\n\n  const commentTitle =\n    updatedComments.length === 1 ? \"1 Comment\" : `${totalComments} Comments`;\n  const commentCards = updatedComments.map((comment, index) => (\n    <Comment\n      key={index}\n      user={comment.user}\n      commentId={comment._id}\n      content={comment.content}\n      replies={comment.replies}\n    />\n  ));\n\n  return (\n    <>\n      <section className={styles[\"comments_section\"]}>\n        <h1 className={styles[\"comments_header\"]}>{commentTitle} </h1>\n\n        <div className={styles.comments}>{commentCards}</div>\n      </section>\n      <AddCommentForm updateComments={setUpdatedComments} />\n    </>\n  );\n};\n\nexport default CommentSection;\n"]},"metadata":{},"sourceType":"module"}