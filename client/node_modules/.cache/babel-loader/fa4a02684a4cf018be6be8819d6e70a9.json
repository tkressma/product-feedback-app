{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/SuggestionsFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./SuggestionsFeed.module.css\";\nimport { useSelector } from \"react-redux\";\nimport NoSuggestions from \"./NoSuggestions.js/NoSuggestions\";\nimport { SpinnerCircularFixed } from \"spinners-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Suggestion = /*#__PURE__*/React.lazy(_c = () => import(\"./Suggestion/Suggestion\"));\n_c2 = Suggestion;\nexport default function SuggestionsFeed() {\n  _s();\n\n  // Retrieves all of the suggestions\n  const {\n    suggestions,\n    isLoading\n  } = useSelector(state => state.suggestions); // If there is one or more suggestions in the state array and the api\n  // request has finished loading, then there are suggestions available to display\n\n  const suggestionsAvailable = suggestions.length !== 0; // If there are no suggestions, apply different styling to the section\n\n  const suggestionFeedStyling = suggestionsAvailable ? styles.suggestions : styles[\"suggetions--empty\"]; // Dynamically create all suggestion components to be rendered on the page\n\n  const suggestionCards = suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(Suggestion, {\n    suggestionData: suggestion\n  }, suggestion[\"_id\"], false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this)); // If isLoading is true, display a loading symbol.\n  // As long as there are suggestions, display all of the available suggestion components.\n  // If suggestionsAvailable is false, display the no suggestions component.\n\n  const feed = isLoading ? /*#__PURE__*/_jsxDEV(SpinnerCircularFixed, {\n    color: \"hsl(230, 76%, 59%)\",\n    secondaryColor: \"#f2f5ff\",\n    size: 100,\n    style: {\n      display: \"block\",\n      margin: \"4rem auto\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n    className: suggestionFeedStyling,\n    children: suggestionsAvailable ? !isLoading && suggestionCards : !isLoading && /*#__PURE__*/_jsxDEV(NoSuggestions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n  return feed;\n}\n\n_s(SuggestionsFeed, \"tSoLze1YfFxzuysLpCCqJqMqVdQ=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = SuggestionsFeed;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Suggestion$React.lazy\");\n$RefreshReg$(_c2, \"Suggestion\");\n$RefreshReg$(_c3, \"SuggestionsFeed\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/SuggestionsFeed.js"],"names":["React","styles","useSelector","NoSuggestions","SpinnerCircularFixed","Suggestion","lazy","SuggestionsFeed","suggestions","isLoading","state","suggestionsAvailable","length","suggestionFeedStyling","suggestionCards","map","suggestion","feed","display","margin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,oBAAT,QAAqC,gBAArC;;AACA,MAAMC,UAAU,gBAAGL,KAAK,CAACM,IAAN,MAAW,MAAM,OAAO,yBAAP,CAAjB,CAAnB;MAAMD,U;AAEN,eAAe,SAASE,eAAT,GAA2B;AAAA;;AACxC;AACA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA6BP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACF,WAAlB,CAA9C,CAFwC,CAIxC;AACA;;AACA,QAAMG,oBAAoB,GAAGH,WAAW,CAACI,MAAZ,KAAuB,CAApD,CANwC,CAQxC;;AACA,QAAMC,qBAAqB,GAAGF,oBAAoB,GAC9CV,MAAM,CAACO,WADuC,GAE9CP,MAAM,CAAC,mBAAD,CAFV,CATwC,CAaxC;;AACA,QAAMa,eAAe,GAAGN,WAAW,CAACO,GAAZ,CAAiBC,UAAD,iBACtC,QAAC,UAAD;AAAoC,IAAA,cAAc,EAAEA;AAApD,KAAiBA,UAAU,CAAC,KAAD,CAA3B;AAAA;AAAA;AAAA;AAAA,UADsB,CAAxB,CAdwC,CAkBxC;AACA;AACA;;AACA,QAAMC,IAAI,GAAGR,SAAS,gBACpB,QAAC,oBAAD;AACE,IAAA,KAAK,EAAC,oBADR;AAEE,IAAA,cAAc,EAAC,SAFjB;AAGE,IAAA,IAAI,EAAE,GAHR;AAIE,IAAA,KAAK,EAAE;AACLS,MAAAA,OAAO,EAAE,OADJ;AAELC,MAAAA,MAAM,EAAE;AAFH;AAJT;AAAA;AAAA;AAAA;AAAA,UADoB,gBAWpB;AAAS,IAAA,SAAS,EAAEN,qBAApB;AAAA,cACGF,oBAAoB,GACjB,CAACF,SAAD,IAAcK,eADG,GAEjB,CAACL,SAAD,iBAAc,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAHpB;AAAA;AAAA;AAAA;AAAA,UAXF;AAkBA,SAAOQ,IAAP;AACD;;GAxCuBV,e;UAEaL,W;;;MAFbK,e","sourcesContent":["import React from \"react\";\nimport styles from \"./SuggestionsFeed.module.css\";\nimport { useSelector } from \"react-redux\";\nimport NoSuggestions from \"./NoSuggestions.js/NoSuggestions\";\nimport { SpinnerCircularFixed } from \"spinners-react\";\nconst Suggestion = React.lazy(() => import(\"./Suggestion/Suggestion\"));\n\nexport default function SuggestionsFeed() {\n  // Retrieves all of the suggestions\n  const { suggestions, isLoading } = useSelector((state) => state.suggestions);\n\n  // If there is one or more suggestions in the state array and the api\n  // request has finished loading, then there are suggestions available to display\n  const suggestionsAvailable = suggestions.length !== 0;\n\n  // If there are no suggestions, apply different styling to the section\n  const suggestionFeedStyling = suggestionsAvailable\n    ? styles.suggestions\n    : styles[\"suggetions--empty\"];\n\n  // Dynamically create all suggestion components to be rendered on the page\n  const suggestionCards = suggestions.map((suggestion) => (\n    <Suggestion key={suggestion[\"_id\"]} suggestionData={suggestion} />\n  ));\n\n  // If isLoading is true, display a loading symbol.\n  // As long as there are suggestions, display all of the available suggestion components.\n  // If suggestionsAvailable is false, display the no suggestions component.\n  const feed = isLoading ? (\n    <SpinnerCircularFixed\n      color=\"hsl(230, 76%, 59%)\"\n      secondaryColor=\"#f2f5ff\"\n      size={100}\n      style={{\n        display: \"block\",\n        margin: \"4rem auto\",\n      }}\n    />\n  ) : (\n    <section className={suggestionFeedStyling}>\n      {suggestionsAvailable\n        ? !isLoading && suggestionCards\n        : !isLoading && <NoSuggestions />}\n    </section>\n  );\n\n  return feed;\n}\n"]},"metadata":{},"sourceType":"module"}