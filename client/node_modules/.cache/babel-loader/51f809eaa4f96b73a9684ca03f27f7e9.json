{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/UpvoteButton/UpvoteButton.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport styles from \"./UpvoteButton.module.css\";\nimport upvoteIcon from \"../../../../../../assets/shared/icon-arrow-up.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { upvoteSuggestion } from \"../../../../../../actions/suggestions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpvoteButton = _ref => {\n  _s();\n\n  let {\n    suggestionData,\n    id\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const upvotes = suggestionData === null || suggestionData === void 0 ? void 0 : suggestionData.upvotes;\n  const [upvoteCount, setUpvoteCount] = useState(upvotes === null || upvotes === void 0 ? void 0 : upvotes.length); // Checks to see if the current user ID has already upvoted the post.\n  // If the ID has not upvoted, add active styling to the upvote button.\n  // Else, remove active styling.\n\n  const isUpvoted = upvotes.find(upvote => upvote === id);\n\n  const handleUpvote = () => {\n    // If the user is not signed in, redirect to sign in/sign up\n    if (!user) {\n      navigate(\"/auth\");\n    } else {\n      dispatch(upvoteSuggestion(id));\n\n      if (isUpvoted) {\n        setUpvoteCount(upvotes === null || upvotes === void 0 ? void 0 : upvotes.filter(upvote => upvote !== id));\n      } else {\n        setUpvoteCount([...upvotes, id]);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${styles.upvote} ${isUpvoted && styles[\"upvote--active\"]}`,\n    onClick: handleUpvote,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: upvoteIcon,\n      alt: \"Upvote arrow\",\n      className: `${styles[\"upvote__icon\"]} ${isUpvoted && styles[\"upvote__icon--active\"]}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: upvoteCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpvoteButton, \"GB0jFoIZPObyJDa4vgLvVXswuhE=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = UpvoteButton;\nexport default UpvoteButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpvoteButton\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/UpvoteButton/UpvoteButton.js"],"names":["useState","styles","upvoteIcon","useDispatch","upvoteSuggestion","useNavigate","UpvoteButton","suggestionData","id","dispatch","navigate","user","JSON","parse","localStorage","getItem","upvotes","upvoteCount","setUpvoteCount","length","isUpvoted","find","upvote","handleUpvote","filter"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,uCAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,YAAY,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,GAA2B;AAC/C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;AACA,QAAMC,OAAO,GAAGT,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAES,OAAhC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAACgB,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEG,MAAV,CAA9C,CAL+C,CAO/C;AACA;AACA;;AACA,QAAMC,SAAS,GAAGJ,OAAO,CAACK,IAAR,CAAcC,MAAD,IAAYA,MAAM,KAAKd,EAApC,CAAlB;;AAEA,QAAMe,YAAY,GAAG,MAAM;AACzB;AACA,QAAI,CAACZ,IAAL,EAAW;AACTD,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,KAFD,MAEO;AACLD,MAAAA,QAAQ,CAACL,gBAAgB,CAACI,EAAD,CAAjB,CAAR;;AAEA,UAAIY,SAAJ,EAAe;AACbF,QAAAA,cAAc,CAACF,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEQ,MAAT,CAAiBF,MAAD,IAAYA,MAAM,KAAKd,EAAvC,CAAD,CAAd;AACD,OAFD,MAEO;AACLU,QAAAA,cAAc,CAAC,CAAC,GAAGF,OAAJ,EAAaR,EAAb,CAAD,CAAd;AACD;AACF;AACF,GAbD;;AAeA,sBACE;AACE,IAAA,SAAS,EAAG,GAAEP,MAAM,CAACqB,MAAO,IAAGF,SAAS,IAAInB,MAAM,CAAC,gBAAD,CAAmB,EADvE;AAEE,IAAA,OAAO,EAAEsB,YAFX;AAAA,4BAIE;AACE,MAAA,GAAG,EAAErB,UADP;AAEE,MAAA,GAAG,EAAC,cAFN;AAGE,MAAA,SAAS,EAAG,GAAED,MAAM,CAAC,cAAD,CAAiB,IACnCmB,SAAS,IAAInB,MAAM,CAAC,sBAAD,CACpB;AALH;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AAAA,gBAAOgB;AAAP;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1CD;;GAAMX,Y;UACaH,W,EACAE,W;;;KAFbC,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\";\nimport styles from \"./UpvoteButton.module.css\";\nimport upvoteIcon from \"../../../../../../assets/shared/icon-arrow-up.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { upvoteSuggestion } from \"../../../../../../actions/suggestions\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst UpvoteButton = ({ suggestionData, id }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const upvotes = suggestionData?.upvotes;\n  const [upvoteCount, setUpvoteCount] = useState(upvotes?.length);\n\n  // Checks to see if the current user ID has already upvoted the post.\n  // If the ID has not upvoted, add active styling to the upvote button.\n  // Else, remove active styling.\n  const isUpvoted = upvotes.find((upvote) => upvote === id);\n\n  const handleUpvote = () => {\n    // If the user is not signed in, redirect to sign in/sign up\n    if (!user) {\n      navigate(\"/auth\");\n    } else {\n      dispatch(upvoteSuggestion(id));\n\n      if (isUpvoted) {\n        setUpvoteCount(upvotes?.filter((upvote) => upvote !== id));\n      } else {\n        setUpvoteCount([...upvotes, id]);\n      }\n    }\n  };\n\n  return (\n    <button\n      className={`${styles.upvote} ${isUpvoted && styles[\"upvote--active\"]}`}\n      onClick={handleUpvote}\n    >\n      <img\n        src={upvoteIcon}\n        alt=\"Upvote arrow\"\n        className={`${styles[\"upvote__icon\"]} ${\n          isUpvoted && styles[\"upvote__icon--active\"]\n        }`}\n      />\n      <span>{upvoteCount}</span>\n    </button>\n  );\n};\n\nexport default UpvoteButton;\n"]},"metadata":{},"sourceType":"module"}