{"ast":null,"code":"import _slicedToArray from\"/home/tom/Desktop/product-feedback-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import styles from\"./DropDownMenu.module.css\";import downArrowIcon from\"../../../assets/shared/icon-arrow-down.svg\";import checkIcon from\"../../../assets/shared/icon-check.svg\";// Takes in a list of options and a state setting function, setOption.\n// Once a user makes a selection, the option in the component is changed.\n// If the dropdown menu is part of a form, change the styling.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var DropDownMenu=function DropDownMenu(_ref){var listOptions=_ref.listOptions,setOption=_ref.setOption,_ref$isForm=_ref.isForm,isForm=_ref$isForm===void 0?false:_ref$isForm;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),menuOpen=_useState2[0],setMenuOpen=_useState2[1];var _useState3=useState(listOptions[0]),_useState4=_slicedToArray(_useState3,2),selectedOption=_useState4[0],setSelectedOption=_useState4[1];var handleDropDown=function handleDropDown(event){event.preventDefault();setMenuOpen(!menuOpen);// Toggle the dropdown menu\nevent.target.setAttribute(\"aria-expanded\",menuOpen);// Toggle aria-expanded label for accessibility\n};var handleOptionSelection=function handleOptionSelection(event){setMenuOpen(false);// Close the dropdown menu\nsetSelectedOption(event.target.innerText);// Set the sorting option to user selection (E.G. \"Least Upvotes\")\nsetOption(event.target.innerText);};return/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(styles[\"listbox\"],\" \").concat(isForm&&styles[\"listbox--form\"],\" \").concat(menuOpen&&isForm&&styles[\"listbox--open\"]),children:[/*#__PURE__*/_jsxs(\"div\",{className:styles[\"sort_options\"],children:[!isForm&&/*#__PURE__*/_jsx(\"span\",{id:\"sort_label\",children:\"Sort by :\"}),/*#__PURE__*/_jsx(\"button\",{className:\"\".concat(isForm&&styles[\"listbox--form-button\"]),onClick:handleDropDown,\"aria-haspopup\":\"listbox\",\"aria-expanded\":\"false\",\"aria-labelledby\":\"sort_label\",children:selectedOption}),/*#__PURE__*/_jsx(\"img\",{src:downArrowIcon,onClick:handleDropDown,className:\"\".concat(!isForm?styles.menuarrow:styles[\"menuarrow--form\"],\" \").concat(menuOpen&&styles[\"menuarrow--active\"]),alt:\"\".concat(menuOpen?\"Down\":\"Up\",\" arrow\")})]}),/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles[\"dropdown\"],\" \").concat(menuOpen&&styles[\"dropdown--active\"],\" \").concat(isForm&&styles[\"dropdown--form\"]),children:/*#__PURE__*/_jsx(\"ul\",{role:\"listbox\",\"aria-labelledby\":\"sort_label\",children:listOptions.map(function(option,index){return/*#__PURE__*/_jsxs(\"li\",{className:styles[\"listitem\"],\"aria-selected\":selectedOption===option?true:false,role:\"option\",tabIndex:\"0\",onClick:handleOptionSelection,onKeyPress:handleOptionSelection,children:[option,selectedOption===option&&/*#__PURE__*/_jsx(\"img\",{src:checkIcon,alt:\"Checkmark\",className:styles[\"listitem_checkmark\"]})]},index);})})})]});};","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/DropDownMenu/DropDownMenu.js"],"names":["React","useState","styles","downArrowIcon","checkIcon","DropDownMenu","listOptions","setOption","isForm","menuOpen","setMenuOpen","selectedOption","setSelectedOption","handleDropDown","event","preventDefault","target","setAttribute","handleOptionSelection","innerText","menuarrow","map","option","index"],"mappings":"mIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,2BAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,4CAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,uCAAtB,CAEA;AACA;AACA;wFACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAgD,IAA7CC,CAAAA,WAA6C,MAA7CA,WAA6C,CAAhCC,SAAgC,MAAhCA,SAAgC,kBAArBC,MAAqB,CAArBA,MAAqB,sBAAZ,KAAY,aAC1E,cAAgCP,QAAQ,CAAC,KAAD,CAAxC,wCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAA4CT,QAAQ,CAACK,WAAW,CAAC,CAAD,CAAZ,CAApD,yCAAOK,cAAP,eAAuBC,iBAAvB,eAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChCA,KAAK,CAACC,cAAN,GACAL,WAAW,CAAC,CAACD,QAAF,CAAX,CAAwB;AACxBK,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,eAA1B,CAA2CR,QAA3C,EAAsD;AACvD,CAJD,CAMA,GAAMS,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACJ,KAAD,CAAW,CACvCJ,WAAW,CAAC,KAAD,CAAX,CAAoB;AACpBE,iBAAiB,CAACE,KAAK,CAACE,MAAN,CAAaG,SAAd,CAAjB,CAA2C;AAC3CZ,SAAS,CAACO,KAAK,CAACE,MAAN,CAAaG,SAAd,CAAT,CACD,CAJD,CAMA,mBACE,aACE,SAAS,WAAKjB,MAAM,CAAC,SAAD,CAAX,aAA0BM,MAAM,EAAIN,MAAM,CAAC,eAAD,CAA1C,aACPO,QAAQ,EAAID,MAAZ,EAAsBN,MAAM,CAAC,eAAD,CADrB,CADX,wBAME,aAAK,SAAS,CAAEA,MAAM,CAAC,cAAD,CAAtB,WACG,CAACM,MAAD,eAAW,aAAM,EAAE,CAAC,YAAT,uBADd,cAEE,eACE,SAAS,WAAKA,MAAM,EAAIN,MAAM,CAAC,sBAAD,CAArB,CADX,CAEE,OAAO,CAAEW,cAFX,CAGE,gBAAc,SAHhB,CAIE,gBAAc,OAJhB,CAKE,kBAAgB,YALlB,UAOGF,cAPH,EAFF,cAWE,YACE,GAAG,CAAER,aADP,CAEE,OAAO,CAAEU,cAFX,CAGE,SAAS,WACP,CAACL,MAAD,CAAUN,MAAM,CAACkB,SAAjB,CAA6BlB,MAAM,CAAC,iBAAD,CAD5B,aAELO,QAAQ,EAAIP,MAAM,CAAC,mBAAD,CAFb,CAHX,CAME,GAAG,WAAKO,QAAQ,CAAG,MAAH,CAAY,IAAzB,UANL,EAXF,GANF,cA4BE,YACE,SAAS,WAAKP,MAAM,CAAC,UAAD,CAAX,aACPO,QAAQ,EAAIP,MAAM,CAAC,kBAAD,CADX,aAELM,MAAM,EAAIN,MAAM,CAAC,gBAAD,CAFX,CADX,uBAKE,WAAI,IAAI,CAAC,SAAT,CAAmB,kBAAgB,YAAnC,UACGI,WAAW,CAACe,GAAZ,CAAgB,SAACC,MAAD,CAASC,KAAT,qBACf,YAEE,SAAS,CAAErB,MAAM,CAAC,UAAD,CAFnB,CAGE,gBAAeS,cAAc,GAAKW,MAAnB,CAA4B,IAA5B,CAAmC,KAHpD,CAIE,IAAI,CAAC,QAJP,CAKE,QAAQ,CAAC,GALX,CAME,OAAO,CAAEJ,qBANX,CAOE,UAAU,CAAEA,qBAPd,WAUGI,MAVH,CAaGX,cAAc,GAAKW,MAAnB,eACC,YACE,GAAG,CAAElB,SADP,CAEE,GAAG,CAAC,WAFN,CAGE,SAAS,CAAEF,MAAM,CAAC,oBAAD,CAHnB,EAdJ,GACOqB,KADP,CADe,EAAhB,CADH,EALF,EA5BF,GADF,CA8DD,CA9EM","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./DropDownMenu.module.css\";\nimport downArrowIcon from \"../../../assets/shared/icon-arrow-down.svg\";\nimport checkIcon from \"../../../assets/shared/icon-check.svg\";\n\n// Takes in a list of options and a state setting function, setOption.\n// Once a user makes a selection, the option in the component is changed.\n// If the dropdown menu is part of a form, change the styling.\nexport const DropDownMenu = ({ listOptions, setOption, isForm = false }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(listOptions[0]);\n\n  const handleDropDown = (event) => {\n    event.preventDefault();\n    setMenuOpen(!menuOpen); // Toggle the dropdown menu\n    event.target.setAttribute(\"aria-expanded\", menuOpen); // Toggle aria-expanded label for accessibility\n  };\n\n  const handleOptionSelection = (event) => {\n    setMenuOpen(false); // Close the dropdown menu\n    setSelectedOption(event.target.innerText); // Set the sorting option to user selection (E.G. \"Least Upvotes\")\n    setOption(event.target.innerText);\n  };\n\n  return (\n    <div\n      className={`${styles[\"listbox\"]} ${isForm && styles[\"listbox--form\"]} ${\n        menuOpen && isForm && styles[\"listbox--open\"]\n      }`}\n    >\n      {/* Container for the label, the dropdown button, and the up/down arrow */}\n      <div className={styles[\"sort_options\"]}>\n        {!isForm && <span id=\"sort_label\">Sort by :</span>}\n        <button\n          className={`${isForm && styles[\"listbox--form-button\"]}`}\n          onClick={handleDropDown}\n          aria-haspopup=\"listbox\"\n          aria-expanded=\"false\"\n          aria-labelledby=\"sort_label\"\n        >\n          {selectedOption}\n        </button>\n        <img\n          src={downArrowIcon}\n          onClick={handleDropDown}\n          className={`${\n            !isForm ? styles.menuarrow : styles[\"menuarrow--form\"]\n          } ${menuOpen && styles[\"menuarrow--active\"]}`}\n          alt={`${menuOpen ? \"Down\" : \"Up\"} arrow`}\n        />\n      </div>\n\n      {/* Dropdown pop up */}\n      <div\n        className={`${styles[\"dropdown\"]} ${\n          menuOpen && styles[\"dropdown--active\"]\n        } ${isForm && styles[\"dropdown--form\"]}`}\n      >\n        <ul role=\"listbox\" aria-labelledby=\"sort_label\">\n          {listOptions.map((option, index) => (\n            <li\n              key={index}\n              className={styles[\"listitem\"]}\n              aria-selected={selectedOption === option ? true : false}\n              role=\"option\"\n              tabIndex=\"0\"\n              onClick={handleOptionSelection}\n              onKeyPress={handleOptionSelection}\n            >\n              {/* Option text */}\n              {option}\n\n              {/* If a list item is currently selected, display a checkmark */}\n              {selectedOption === option && (\n                <img\n                  src={checkIcon}\n                  alt=\"Checkmark\"\n                  className={styles[\"listitem_checkmark\"]}\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}