{"ast":null,"code":"import _objectSpread from\"/home/tom/Desktop/product-feedback-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/tom/Desktop/product-feedback-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{useNavigate}from\"react-router-dom\";import{createSuggestion}from\"../../actions/suggestions\";import styles from\"./Create.module.css\";import Heading from\"../UI/Heading/Heading\";import Form from\"../UI/Forms/Form/Form\";import FormTextInput from\"../UI/Forms/FormTextInput/FormTextInput\";import FormSelectInput from\"../UI/Forms/FormSelectInput/FormSelectInput\";import createIcon from\"../../assets/shared/icon-new-feedback.svg\";import Button from\"../UI/Button/Button\";import checkIcon from\"../../assets/shared/icon-check.svg\";import{SpinnerCircularFixed}from\"spinners-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Create(){var _useState=useState({title:\"\",category:\"Feature\",status:\"suggestion\",description:\"\",upvotes:[],comments:[]}),_useState2=_slicedToArray(_useState,2),newSuggestion=_useState2[0],setNewSuggestion=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),titleError=_useState4[0],setTitleError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),descriptionError=_useState6[0],setDecriptionError=_useState6[1];var dispatch=useDispatch();var navigate=useNavigate();var _useSelector=useSelector(function(state){return state.suggestions;}),isLoading=_useSelector.isLoading;var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),submitted=_useState8[0],setSubmitted=_useState8[1];// Did the user submit the form?\nvar user=JSON.parse(localStorage.getItem(\"profile\"));// If a user is not logged in upon trying to access this form,\n// redirect them to sign in/sign up.\nuseEffect(function(){var _user$result;if(!(user!==null&&user!==void 0&&(_user$result=user.result)!==null&&_user$result!==void 0&&_user$result.name)){navigate(\"/auth\");}});// Displays a loading circle if the api call is still processing.\n// Once finished, it will display a check mark.\nvar submissionConfirmation=isLoading?/*#__PURE__*/_jsx(SpinnerCircularFixed,{color:\"hsl(230, 76%, 59%)\",secondaryColor:\"#f2f5ff\",style:{height:43.98,margin:\"0 auto\"}}):/*#__PURE__*/_jsx(\"img\",{src:checkIcon,className:styles[\"loading--check\"],alt:\"Checkmark - action is completed\"});// After the feedback is added, wait 1.5 seconds before redirecting\n// back to the home page.\nuseEffect(function(){if(!isLoading&&submitted){var timerFunc=setTimeout(function(){return navigate(\"/\");},1500);return function(){return clearTimeout(timerFunc);};}});var handleSubmit=function handleSubmit(event){event.preventDefault();var titleValidation=newSuggestion.title.length!==0;var descriptionValidation=newSuggestion.description.length!==0;setTitleError(!titleValidation?true:false);setDecriptionError(!descriptionValidation?true:false);if(titleValidation&&descriptionValidation){var _user$result2,_user$result3,_user$result4;setSubmitted(true);dispatch(createSuggestion(_objectSpread(_objectSpread({},newSuggestion),{},{name:user===null||user===void 0?void 0:(_user$result2=user.result)===null||_user$result2===void 0?void 0:_user$result2.name,// Add full name to suggestion data\nusername:user===null||user===void 0?void 0:(_user$result3=user.result)===null||_user$result3===void 0?void 0:_user$result3.username,// Add username to suggestion data\nupvotes:[\"\".concat(user===null||user===void 0?void 0:(_user$result4=user.result)===null||_user$result4===void 0?void 0:_user$result4._id)]// Automatically upvote the user's own post\n})));}};return/*#__PURE__*/_jsxs(Form,{icon:createIcon,backButtonDestination:\"/\",children:[/*#__PURE__*/_jsx(Heading,{type:\"h1\",children:\"Create New Feedback\"}),/*#__PURE__*/_jsxs(\"form\",{id:\"form\",children:[/*#__PURE__*/_jsx(FormTextInput,{inputId:\"title\",value:newSuggestion.title,labelHeading:\"Feedback Title\",labelCaption:\"Add a short, descriptive headline\",error:titleError,onChange:function onChange(event){return setNewSuggestion(_objectSpread(_objectSpread({},newSuggestion),{},{title:event.target.value}));}}),/*#__PURE__*/_jsx(FormSelectInput,{inputId:\"category\",labelHeading:\"Category\",labelCaption:\"Choose a category for your feedback\",onChange:function onChange(option){setNewSuggestion(_objectSpread(_objectSpread({},newSuggestion),{},{category:option}));}}),/*#__PURE__*/_jsx(FormTextInput,{inputId:\"detail\",value:newSuggestion.description,large:\"true\",labelHeading:\"Feedback Detail\",labelCaption:\"Include any specific comments on what should be improved, added, etc.\",error:descriptionError,onChange:function onChange(event){return setNewSuggestion(_objectSpread(_objectSpread({},newSuggestion),{},{description:event.target.value}));}}),/*#__PURE__*/_jsx(\"div\",{className:styles[\"button__container\"],children:submitted?submissionConfirmation:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{btnStyle:\"violet\",text:\"Add Feedback\",form:\"form\",onClick:handleSubmit}),/*#__PURE__*/_jsx(Button,{btnStyle:\"navy-blue\",text:\"Cancel\",onClick:handleSubmit,link:true,destination:\"/\"})]})})]})]});}","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Create/Create.js"],"names":["useEffect","useState","useDispatch","useSelector","useNavigate","createSuggestion","styles","Heading","Form","FormTextInput","FormSelectInput","createIcon","Button","checkIcon","SpinnerCircularFixed","Create","title","category","status","description","upvotes","comments","newSuggestion","setNewSuggestion","titleError","setTitleError","descriptionError","setDecriptionError","dispatch","navigate","state","suggestions","isLoading","submitted","setSubmitted","user","JSON","parse","localStorage","getItem","result","name","submissionConfirmation","height","margin","timerFunc","setTimeout","clearTimeout","handleSubmit","event","preventDefault","titleValidation","length","descriptionValidation","username","_id","target","value","option"],"mappings":"qQAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,gBAAT,KAAiC,2BAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,aAAP,KAA0B,yCAA1B,CACA,MAAOC,CAAAA,eAAP,KAA4B,6CAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,2CAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CAEA,OAASC,oBAAT,KAAqC,gBAArC,C,6IAEA,cAAe,SAASC,CAAAA,MAAT,EAAkB,CAC/B,cAA0Cd,QAAQ,CAAC,CACjDe,KAAK,CAAE,EAD0C,CAEjDC,QAAQ,CAAE,SAFuC,CAGjDC,MAAM,CAAE,YAHyC,CAIjDC,WAAW,CAAE,EAJoC,CAKjDC,OAAO,CAAE,EALwC,CAMjDC,QAAQ,CAAE,EANuC,CAAD,CAAlD,wCAAOC,aAAP,eAAsBC,gBAAtB,eASA,eAAoCtB,QAAQ,CAAC,KAAD,CAA5C,yCAAOuB,UAAP,eAAmBC,aAAnB,eACA,eAA+CxB,QAAQ,CAAC,KAAD,CAAvD,yCAAOyB,gBAAP,eAAyBC,kBAAzB,eAEA,GAAMC,CAAAA,QAAQ,CAAG1B,WAAW,EAA5B,CACA,GAAM2B,CAAAA,QAAQ,CAAGzB,WAAW,EAA5B,CACA,iBAAsBD,WAAW,CAAC,SAAC2B,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAjB,EAAD,CAAjC,CAAQC,SAAR,cAAQA,SAAR,CACA,eAAkC/B,QAAQ,CAAC,KAAD,CAA1C,yCAAOgC,SAAP,eAAkBC,YAAlB,eAAmD;AACnD,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb,CAEA;AACA;AACAvC,SAAS,CAAC,UAAM,kBACd,GAAI,EAACmC,IAAD,SAACA,IAAD,yBAACA,IAAI,CAAEK,MAAP,iCAAC,aAAcC,IAAf,CAAJ,CAAyB,CACvBZ,QAAQ,CAAC,OAAD,CAAR,CACD,CACF,CAJQ,CAAT,CAMA;AACA;AACA,GAAMa,CAAAA,sBAAsB,CAAGV,SAAS,cACtC,KAAC,oBAAD,EACE,KAAK,CAAC,oBADR,CAEE,cAAc,CAAC,SAFjB,CAGE,KAAK,CAAE,CAAEW,MAAM,CAAE,KAAV,CAAiBC,MAAM,CAAE,QAAzB,CAHT,EADsC,cAOtC,YACE,GAAG,CAAE/B,SADP,CAEE,SAAS,CAAEP,MAAM,CAAC,gBAAD,CAFnB,CAGE,GAAG,CAAC,iCAHN,EAPF,CAcA;AACA;AACAN,SAAS,CAAC,UAAM,CACd,GAAI,CAACgC,SAAD,EAAcC,SAAlB,CAA6B,CAC3B,GAAIY,CAAAA,SAAS,CAAGC,UAAU,CAAC,iBAAMjB,CAAAA,QAAQ,CAAC,GAAD,CAAd,EAAD,CAAsB,IAAtB,CAA1B,CACA,MAAO,kBAAMkB,CAAAA,YAAY,CAACF,SAAD,CAAlB,EAAP,CACD,CACF,CALQ,CAAT,CAOA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,eAAe,CAAG7B,aAAa,CAACN,KAAd,CAAoBoC,MAApB,GAA+B,CAAvD,CACA,GAAMC,CAAAA,qBAAqB,CAAG/B,aAAa,CAACH,WAAd,CAA0BiC,MAA1B,GAAqC,CAAnE,CAEA3B,aAAa,CAAC,CAAC0B,eAAD,CAAmB,IAAnB,CAA0B,KAA3B,CAAb,CACAxB,kBAAkB,CAAC,CAAC0B,qBAAD,CAAyB,IAAzB,CAAgC,KAAjC,CAAlB,CAEA,GAAIF,eAAe,EAAIE,qBAAvB,CAA8C,+CAC5CnB,YAAY,CAAC,IAAD,CAAZ,CACAN,QAAQ,CACNvB,gBAAgB,gCACXiB,aADW,MAEdmB,IAAI,CAAEN,IAAF,SAAEA,IAAF,gCAAEA,IAAI,CAAEK,MAAR,wCAAE,cAAcC,IAFN,CAEY;AAC1Ba,QAAQ,CAAEnB,IAAF,SAAEA,IAAF,gCAAEA,IAAI,CAAEK,MAAR,wCAAE,cAAcc,QAHV,CAGoB;AAClClC,OAAO,CAAE,WAAIe,IAAJ,SAAIA,IAAJ,gCAAIA,IAAI,CAAEK,MAAV,wCAAI,cAAce,GAAlB,EAA0B;AAJrB,GADV,CAAR,CAQD,CACF,CApBD,CAsBA,mBACE,MAAC,IAAD,EAAM,IAAI,CAAE5C,UAAZ,CAAwB,qBAAqB,CAAC,GAA9C,wBACE,KAAC,OAAD,EAAS,IAAI,CAAC,IAAd,iCADF,cAGE,cAAM,EAAE,CAAC,MAAT,wBACE,KAAC,aAAD,EACE,OAAO,CAAC,OADV,CAEE,KAAK,CAAEW,aAAa,CAACN,KAFvB,CAGE,YAAY,CAAC,gBAHf,CAIE,YAAY,CAAC,mCAJf,CAKE,KAAK,CAAEQ,UALT,CAME,QAAQ,CAAE,kBAACyB,KAAD,QACR1B,CAAAA,gBAAgB,gCAAMD,aAAN,MAAqBN,KAAK,CAAEiC,KAAK,CAACO,MAAN,CAAaC,KAAzC,GADR,EANZ,EADF,cAWE,KAAC,eAAD,EACE,OAAO,CAAC,UADV,CAEE,YAAY,CAAC,UAFf,CAGE,YAAY,CAAC,qCAHf,CAIE,QAAQ,CAAE,kBAACC,MAAD,CAAY,CACpBnC,gBAAgB,gCACXD,aADW,MAEdL,QAAQ,CAAEyC,MAFI,GAAhB,CAID,CATH,EAXF,cAsBE,KAAC,aAAD,EACE,OAAO,CAAC,QADV,CAEE,KAAK,CAAEpC,aAAa,CAACH,WAFvB,CAGE,KAAK,CAAC,MAHR,CAIE,YAAY,CAAC,iBAJf,CAKE,YAAY,CAAC,uEALf,CAME,KAAK,CAAEO,gBANT,CAOE,QAAQ,CAAE,kBAACuB,KAAD,QACR1B,CAAAA,gBAAgB,gCACXD,aADW,MAEdH,WAAW,CAAE8B,KAAK,CAACO,MAAN,CAAaC,KAFZ,GADR,EAPZ,EAtBF,cAqCE,YAAK,SAAS,CAAEnD,MAAM,CAAC,mBAAD,CAAtB,UACG2B,SAAS,CACRS,sBADQ,cAGR,wCACE,KAAC,MAAD,EACE,QAAQ,CAAC,QADX,CAEE,IAAI,CAAC,cAFP,CAGE,IAAI,CAAC,MAHP,CAIE,OAAO,CAAEM,YAJX,EADF,cAQE,KAAC,MAAD,EACE,QAAQ,CAAC,WADX,CAEE,IAAI,CAAC,QAFP,CAGE,OAAO,CAAEA,YAHX,CAIE,IAAI,CAAE,IAJR,CAKE,WAAW,CAAC,GALd,EARF,GAJJ,EArCF,GAHF,GADF,CAkED","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createSuggestion } from \"../../actions/suggestions\";\nimport styles from \"./Create.module.css\";\nimport Heading from \"../UI/Heading/Heading\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport FormSelectInput from \"../UI/Forms/FormSelectInput/FormSelectInput\";\nimport createIcon from \"../../assets/shared/icon-new-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\nimport checkIcon from \"../../assets/shared/icon-check.svg\";\n\nimport { SpinnerCircularFixed } from \"spinners-react\";\n\nexport default function Create() {\n  const [newSuggestion, setNewSuggestion] = useState({\n    title: \"\",\n    category: \"Feature\",\n    status: \"suggestion\",\n    description: \"\",\n    upvotes: [],\n    comments: [],\n  });\n\n  const [titleError, setTitleError] = useState(false);\n  const [descriptionError, setDecriptionError] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isLoading } = useSelector((state) => state.suggestions);\n  const [submitted, setSubmitted] = useState(false); // Did the user submit the form?\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  // If a user is not logged in upon trying to access this form,\n  // redirect them to sign in/sign up.\n  useEffect(() => {\n    if (!user?.result?.name) {\n      navigate(\"/auth\");\n    }\n  });\n\n  // Displays a loading circle if the api call is still processing.\n  // Once finished, it will display a check mark.\n  const submissionConfirmation = isLoading ? (\n    <SpinnerCircularFixed\n      color=\"hsl(230, 76%, 59%)\"\n      secondaryColor=\"#f2f5ff\"\n      style={{ height: 43.98, margin: \"0 auto\" }}\n    />\n  ) : (\n    <img\n      src={checkIcon}\n      className={styles[\"loading--check\"]}\n      alt=\"Checkmark - action is completed\"\n    />\n  );\n\n  // After the feedback is added, wait 1.5 seconds before redirecting\n  // back to the home page.\n  useEffect(() => {\n    if (!isLoading && submitted) {\n      let timerFunc = setTimeout(() => navigate(\"/\"), 1500);\n      return () => clearTimeout(timerFunc);\n    }\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const titleValidation = newSuggestion.title.length !== 0;\n    const descriptionValidation = newSuggestion.description.length !== 0;\n\n    setTitleError(!titleValidation ? true : false);\n    setDecriptionError(!descriptionValidation ? true : false);\n\n    if (titleValidation && descriptionValidation) {\n      setSubmitted(true);\n      dispatch(\n        createSuggestion({\n          ...newSuggestion,\n          name: user?.result?.name, // Add full name to suggestion data\n          username: user?.result?.username, // Add username to suggestion data\n          upvotes: [`${user?.result?._id}`], // Automatically upvote the user's own post\n        })\n      );\n    }\n  };\n\n  return (\n    <Form icon={createIcon} backButtonDestination=\"/\">\n      <Heading type=\"h1\">Create New Feedback</Heading>\n\n      <form id=\"form\">\n        <FormTextInput\n          inputId=\"title\"\n          value={newSuggestion.title}\n          labelHeading=\"Feedback Title\"\n          labelCaption=\"Add a short, descriptive headline\"\n          error={titleError}\n          onChange={(event) =>\n            setNewSuggestion({ ...newSuggestion, title: event.target.value })\n          }\n        />\n        <FormSelectInput\n          inputId=\"category\"\n          labelHeading=\"Category\"\n          labelCaption=\"Choose a category for your feedback\"\n          onChange={(option) => {\n            setNewSuggestion({\n              ...newSuggestion,\n              category: option,\n            });\n          }}\n        />\n        <FormTextInput\n          inputId=\"detail\"\n          value={newSuggestion.description}\n          large=\"true\"\n          labelHeading=\"Feedback Detail\"\n          labelCaption=\"Include any specific comments on what should be improved, added, etc.\"\n          error={descriptionError}\n          onChange={(event) =>\n            setNewSuggestion({\n              ...newSuggestion,\n              description: event.target.value,\n            })\n          }\n        />\n\n        <div className={styles[\"button__container\"]}>\n          {submitted ? (\n            submissionConfirmation\n          ) : (\n            <>\n              <Button\n                btnStyle=\"violet\"\n                text=\"Add Feedback\"\n                form=\"form\"\n                onClick={handleSubmit}\n              />\n\n              <Button\n                btnStyle=\"navy-blue\"\n                text=\"Cancel\"\n                onClick={handleSubmit}\n                link={true}\n                destination=\"/\"\n              />\n            </>\n          )}\n        </div>\n      </form>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}