{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Button/Button.js\";\nimport styles from \"./Button.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button(_ref) {\n  let {\n    type,\n    link = false,\n    children\n  } = _ref;\n  const ElementTag = link ? \"a\" : \"button\";\n  const buttonType = `button--${type}`;\n  const buttonStyling = `${styles.button} ${styles[buttonType]}`;\n\n  if (link === true) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: \"create-feedback\",\n      children: \"+ Add Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: buttonStyling,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n}\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Button/Button.js"],"names":["styles","Link","Button","type","link","children","ElementTag","buttonType","buttonStyling","button"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,MAAT,OAAkD;AAAA,MAAlC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAI,GAAG,KAAf;AAAsBC,IAAAA;AAAtB,GAAkC;AAC/D,QAAMC,UAAU,GAAGF,IAAI,GAAG,GAAH,GAAS,QAAhC;AACA,QAAMG,UAAU,GAAI,WAAUJ,IAAK,EAAnC;AACA,QAAMK,aAAa,GAAI,GAAER,MAAM,CAACS,MAAO,IAAGT,MAAM,CAACO,UAAD,CAAa,EAA7D;;AAEA,MAAIH,IAAI,KAAK,IAAb,EAAmB;AACjB,wBAAO,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBAAO;AAAQ,MAAA,SAAS,EAAEI,aAAnB;AAAA,gBAAmCH;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;KAVuBH,M","sourcesContent":["import styles from \"./Button.module.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Button({ type, link = false, children }) {\n  const ElementTag = link ? \"a\" : \"button\";\n  const buttonType = `button--${type}`;\n  const buttonStyling = `${styles.button} ${styles[buttonType]}`;\n\n  if (link === true) {\n    return <Link to=\"create-feedback\">+ Add Feedback</Link>;\n  } else {\n    return <button className={buttonStyling}>{children}</button>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}