{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Menu/Menu.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./Menu.module.css\";\nimport { useState } from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport SuggestionTags from \"./SuggestionTags/SuggestionTags\";\nimport ProjectRoadmap from \"./ProjectRoadmap/ProjectRoadmap\";\nimport LogoutButton from \"../../../UI/LogoutButton/LogoutButton\";\nimport Backdrop from \"../../../UI/Backdrop/Backdrop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Menu(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    closeMobileMenu\n  } = _ref;\n  // Check if the user is logged in. Display Logout button if that is the case.\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\"))); // Disable scrolling if the menu is opened\n\n  let body = document.querySelector(\"body\");\n\n  if (isOpen) {\n    disableBodyScroll(body);\n  } else {\n    enableBodyScroll(body);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `${styles.menu} ${isOpen && styles[\"menu--active\"]}`,\n    id: \"menu\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"menu--backdrop\"],\n      onClick: closeMobileMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuggestionTags, {\n      closeMobileMenu: isOpen ? closeMobileMenu : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectRoadmap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isOpen && user && /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Menu, \"9ShVsZtJYpRYR7YVUZJ1UulcmNA=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Home/Header/Menu/Menu.js"],"names":["styles","useState","disableBodyScroll","enableBodyScroll","SuggestionTags","ProjectRoadmap","LogoutButton","Backdrop","Menu","isOpen","closeMobileMenu","user","setUser","JSON","parse","localStorage","getItem","body","document","querySelector","menu"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,kBAApD;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,QAAP,MAAqB,+BAArB;;AAEA,eAAe,SAASC,IAAT,OAA2C;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA6B;AACxD;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACY,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAD,CAAhC,CAFwD,CAIxD;;AACA,MAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;;AACA,MAAIV,MAAJ,EAAY;AACVP,IAAAA,iBAAiB,CAACe,IAAD,CAAjB;AACD,GAFD,MAEO;AACLd,IAAAA,gBAAgB,CAACc,IAAD,CAAhB;AACD;;AAED,sBACE;AACE,IAAA,SAAS,EAAG,GAAEjB,MAAM,CAACoB,IAAK,IAAGX,MAAM,IAAIT,MAAM,CAAC,cAAD,CAAiB,EADhE;AAEE,IAAA,EAAE,EAAC,MAFL;AAAA,eAKGS,MAAM,iBACL;AAAK,MAAA,SAAS,EAAET,MAAM,CAAC,gBAAD,CAAtB;AAA0C,MAAA,OAAO,EAAEU;AAAnD;AAAA;AAAA;AAAA;AAAA,YANJ,eASE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YATF,eAeE,QAAC,cAAD;AAAgB,MAAA,eAAe,EAAED,MAAM,GAAGC,eAAH,GAAqB;AAA5D;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAhBF,EAkBGD,MAAM,IAAIE,IAAV,iBAAkB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAlBrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAlCuBH,I;;KAAAA,I","sourcesContent":["import styles from \"./Menu.module.css\";\nimport { useState } from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport SuggestionTags from \"./SuggestionTags/SuggestionTags\";\nimport ProjectRoadmap from \"./ProjectRoadmap/ProjectRoadmap\";\nimport LogoutButton from \"../../../UI/LogoutButton/LogoutButton\";\nimport Backdrop from \"../../../UI/Backdrop/Backdrop\";\n\nexport default function Menu({ isOpen, closeMobileMenu }) {\n  // Check if the user is logged in. Display Logout button if that is the case.\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n\n  // Disable scrolling if the menu is opened\n  let body = document.querySelector(\"body\");\n  if (isOpen) {\n    disableBodyScroll(body);\n  } else {\n    enableBodyScroll(body);\n  }\n\n  return (\n    <section\n      className={`${styles.menu} ${isOpen && styles[\"menu--active\"]}`}\n      id=\"menu\"\n    >\n      {/* If the mobile menu is open, display a back drop */}\n      {isOpen && (\n        <div className={styles[\"menu--backdrop\"]} onClick={closeMobileMenu} />\n      )}\n\n      <Backdrop />\n\n      {/* If the mobile menu is open, send a function to category tags that\n          will close the mobile menu when clicked. Else, send nothing. I did\n          this so that the closeMobileMenu function wasn't constantly called\n          when not on a mobile device.*/}\n      <SuggestionTags closeMobileMenu={isOpen ? closeMobileMenu : null} />\n      <ProjectRoadmap />\n\n      {isOpen && user && <LogoutButton />}\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}