{"ast":null,"code":"import { FETCH_ALL, FETCH_SORTED, FETCH_FILTERED } from \"../constants/actionTypes\";\nexport default (function () {\n  let suggestions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case \"CREATE\":\n      return suggestions;\n\n    case FETCH_SORTED:\n      let sortedSuggestions = [...suggestions];\n      action.payload.forEach((suggestion, index) => {\n        sortedSuggestions[index] = suggestion;\n      });\n      return sortedSuggestions;\n\n    case FETCH_FILTERED:\n      let filteredSuggestions = [...suggestions];\n      action.payload.forEach((suggestion, index) => {\n        filteredSuggestions[index] = suggestion;\n      });\n      return filteredSuggestions;\n\n    default:\n      return suggestions;\n  }\n});","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/reducers/suggestions.js"],"names":["FETCH_ALL","FETCH_SORTED","FETCH_FILTERED","suggestions","action","type","payload","sortedSuggestions","forEach","suggestion","index","filteredSuggestions"],"mappings":"AAAA,SACEA,SADF,EAEEC,YAFF,EAGEC,cAHF,QAIO,0BAJP;AAKA,gBAAe,YAA8B;AAAA,MAA7BC,WAA6B,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,SAAL;AACE,aAAOI,MAAM,CAACE,OAAd;;AACF,SAAK,QAAL;AACE,aAAOH,WAAP;;AACF,SAAKF,YAAL;AACE,UAAIM,iBAAiB,GAAG,CAAC,GAAGJ,WAAJ,CAAxB;AACAC,MAAAA,MAAM,CAACE,OAAP,CAAeE,OAAf,CAAuB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAC5CH,QAAAA,iBAAiB,CAACG,KAAD,CAAjB,GAA2BD,UAA3B;AACD,OAFD;AAGA,aAAOF,iBAAP;;AACF,SAAKL,cAAL;AACE,UAAIS,mBAAmB,GAAG,CAAC,GAAGR,WAAJ,CAA1B;AACAC,MAAAA,MAAM,CAACE,OAAP,CAAeE,OAAf,CAAuB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAC5CC,QAAAA,mBAAmB,CAACD,KAAD,CAAnB,GAA6BD,UAA7B;AACD,OAFD;AAGA,aAAOE,mBAAP;;AACF;AACE,aAAOR,WAAP;AAlBJ;AAoBD,CArBD","sourcesContent":["import {\n  FETCH_ALL,\n  FETCH_SORTED,\n  FETCH_FILTERED,\n} from \"../constants/actionTypes\";\nexport default (suggestions = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case \"CREATE\":\n      return suggestions;\n    case FETCH_SORTED:\n      let sortedSuggestions = [...suggestions];\n      action.payload.forEach((suggestion, index) => {\n        sortedSuggestions[index] = suggestion;\n      });\n      return sortedSuggestions;\n    case FETCH_FILTERED:\n      let filteredSuggestions = [...suggestions];\n      action.payload.forEach((suggestion, index) => {\n        filteredSuggestions[index] = suggestion;\n      });\n      return filteredSuggestions;\n    default:\n      return suggestions;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}