{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/SuggestionPage/AddCommentForm/AddCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"../Comments/Comments.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { commentSuggestion } from \"../../../actions/suggestions\";\nimport Button from \"../../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCommentForm = _ref => {\n  _s();\n\n  let {\n    currentUser,\n    updateComments\n  } = _ref;\n  const [charsLeft, setCharsLeft] = useState(225);\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const isValid = charsLeft > 0;\n  const {\n    id\n  } = useParams();\n\n  const handleAddComment = async e => {\n    var _currentUser$result, _currentUser$result2;\n\n    e.preventDefault();\n    const newComments = await dispatch(commentSuggestion({\n      content: comment,\n      user: {\n        name: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$result = currentUser.result) === null || _currentUser$result === void 0 ? void 0 : _currentUser$result.name,\n        // Add full name to comment data\n        username: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$result2 = currentUser.result) === null || _currentUser$result2 === void 0 ? void 0 : _currentUser$result2.username // Add username to comment data\n\n      }\n    }, id));\n    setComment(\"\"); // Reset the comment\n\n    updateComments(newComments); // Refresh the comments to reflect the newly added comment\n  }; // Update comment field character count and the comment to be posted by the user.\n\n\n  const handleCommentChange = e => {\n    setCharsLeft(225 - e.target.value.length);\n    setComment(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"add-comment\",\n    className: styles.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles[\"comments_header\"],\n      children: \"Add a comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: styles[\"comment_textarea\"],\n      onChange: handleCommentChange,\n      value: comment,\n      placeholder: \"Type your comment here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"comment_details\"],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${styles[\"comment_charcount\"]} ${!isValid && styles[\"comment_charcount--error\"]}`,\n        children: [charsLeft, \" characters left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        btnStyle: isValid ? \"violet\" : \"disabled\",\n        text: \"Post Comment\",\n        form: \"add-comment\",\n        \"aria-disabled\": !isValid,\n        onClick: handleAddComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCommentForm, \"pXgxvOPDjpgXqEt6ISfJl3QQQEA=\", false, function () {\n  return [useDispatch, useParams];\n});\n\n_c = AddCommentForm;\nexport default AddCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCommentForm\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/SuggestionPage/AddCommentForm/AddCommentForm.js"],"names":["React","useState","styles","useDispatch","useParams","commentSuggestion","Button","AddCommentForm","currentUser","updateComments","charsLeft","setCharsLeft","comment","setComment","dispatch","isValid","id","handleAddComment","e","preventDefault","newComments","content","user","name","result","username","handleCommentChange","target","value","length","comments"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"../Comments/Comments.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { commentSuggestion } from \"../../../actions/suggestions\";\nimport Button from \"../../UI/Button/Button\";\nconst AddCommentForm = ({ currentUser, updateComments }) => {\n  const [charsLeft, setCharsLeft] = useState(225);\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const isValid = charsLeft > 0;\n  const { id } = useParams();\n\n  const handleAddComment = async (e) => {\n    e.preventDefault();\n\n    const newComments = await dispatch(\n      commentSuggestion(\n        {\n          content: comment,\n          user: {\n            name: currentUser?.result?.name, // Add full name to comment data\n            username: currentUser?.result?.username, // Add username to comment data\n          },\n        },\n        id\n      )\n    );\n\n    setComment(\"\"); // Reset the comment\n    updateComments(newComments); // Refresh the comments to reflect the newly added comment\n  };\n\n  // Update comment field character count and the comment to be posted by the user.\n  const handleCommentChange = (e) => {\n    setCharsLeft(225 - e.target.value.length);\n    setComment(e.target.value);\n  };\n\n  return (\n    <form id=\"add-comment\" className={styles.comments}>\n      <h2 className={styles[\"comments_header\"]}>Add a comment</h2>\n      <textarea\n        className={styles[\"comment_textarea\"]}\n        onChange={handleCommentChange}\n        value={comment}\n        placeholder=\"Type your comment here...\"\n      />\n      <div className={styles[\"comment_details\"]}>\n        <p\n          className={`${styles[\"comment_charcount\"]} ${\n            !isValid && styles[\"comment_charcount--error\"]\n          }`}\n        >\n          {charsLeft} characters left\n        </p>\n        <Button\n          btnStyle={isValid ? \"violet\" : \"disabled\"}\n          text=\"Post Comment\"\n          form=\"add-comment\"\n          aria-disabled={!isValid}\n          onClick={handleAddComment}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default AddCommentForm;\n"]},"metadata":{},"sourceType":"module"}