{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/SuggestionPage/SuggestionPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styles from \"./SuggestionPage.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport BackButton from \"../UI/BackButton/BackButton\";\nimport Suggestion from \"../Home/Main/SuggestionsFeed/Suggestion/Suggestion\";\nimport Comments from \"./Comments/Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SuggestionPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => dispatch());\n  const {\n    suggestions,\n    isLoading\n  } = useSelector(state => state.suggestions); // Find exact suggestion to be displayed\n\n  const suggestion = suggestions.find(suggestion => suggestion._id === id);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles[\"suggestion_page\"],\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {\n      destination: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), !isLoading && suggestion && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Suggestion, {\n        suggestionData: suggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        commentData: suggestion.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SuggestionPage, \"3VWSBHDSBLF9QQMSmMMMZfjXjGQ=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = SuggestionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestionPage\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/SuggestionPage/SuggestionPage.js"],"names":["React","useEffect","styles","useSelector","useDispatch","useParams","BackButton","Suggestion","Comments","SuggestionPage","dispatch","id","suggestions","isLoading","state","suggestion","find","_id","comments"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AACA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAASN,SAAS,EAAxB;AAEAJ,EAAAA,SAAS,CAAC,MAAMS,QAAQ,EAAf,CAAT;AACA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA6BV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACF,WAAlB,CAA9C,CALuC,CAOvC;;AACA,QAAMG,UAAU,GAAGH,WAAW,CAACI,IAAZ,CAAkBD,UAAD,IAAgBA,UAAU,CAACE,GAAX,KAAmBN,EAApD,CAAnB;AAEA,sBACE;AAAM,IAAA,SAAS,EAAET,MAAM,CAAC,iBAAD,CAAvB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,WAAW,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACW,SAAD,IAAcE,UAAd,iBACC;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,cAAc,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,WAAW,EAAEA,UAAU,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GArBuBT,c;UACLL,W,EACFC,S,EAGoBF,W;;;KALbM,c","sourcesContent":["import React, { useEffect } from \"react\";\nimport styles from \"./SuggestionPage.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport BackButton from \"../UI/BackButton/BackButton\";\nimport Suggestion from \"../Home/Main/SuggestionsFeed/Suggestion/Suggestion\";\nimport Comments from \"./Comments/Comments\";\nexport default function SuggestionPage() {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  useEffect(() => dispatch());\n  const { suggestions, isLoading } = useSelector((state) => state.suggestions);\n\n  // Find exact suggestion to be displayed\n  const suggestion = suggestions.find((suggestion) => suggestion._id === id);\n\n  return (\n    <main className={styles[\"suggestion_page\"]}>\n      <BackButton destination=\"/\" />\n      {!isLoading && suggestion && (\n        <>\n          <Suggestion suggestionData={suggestion} />\n          <Comments commentData={suggestion.comments} />\n        </>\n      )}\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}