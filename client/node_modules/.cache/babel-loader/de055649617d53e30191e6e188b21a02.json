{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Heading/Heading.js\";\nimport styles from \"./Headings.module.css\";\nimport { Link } from \"react-router-dom\"; // This reusable heading takes in a few parameters:\n// type: The styling (and optionally tag) that the heading component is going to use (h1, h2, h3).\n// white: If true, the color of the font is white. Else, it is the default heading color.\n// headingTag: If true, use the associated heading tag determined by the value of type. Defaulted to true.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heading = _ref => {\n  let {\n    type,\n    white,\n    headingTag = true,\n    link = false,\n    destination,\n    children\n  } = _ref;\n  // This allows us to set the HTML tag depending on the value of type.\n  // If headingTag is false, then it is simply a styled paragraph element.\n  const ElementTag = headingTag ? type : \"p\"; // Allows us to select the CSS based on type value\n\n  const headingStyle = `heading--${type}`;\n  const headingStyling = `${styles.heading} \n  ${styles[headingStyle]} \n  ${white && styles.white}`;\n\n  if (link) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: destination,\n      className: headingStyling,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ElementTag, {\n      className: headingStyling,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c = Heading;\nexport default Heading;\n\nvar _c;\n\n$RefreshReg$(_c, \"Heading\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Heading/Heading.js"],"names":["styles","Link","Heading","type","white","headingTag","link","destination","children","ElementTag","headingStyle","headingStyling","heading"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;AACA;AACA;AACA;;;;AACA,MAAMC,OAAO,GAAG,QAOV;AAAA,MAPW;AACfC,IAAAA,IADe;AAEfC,IAAAA,KAFe;AAGfC,IAAAA,UAAU,GAAG,IAHE;AAIfC,IAAAA,IAAI,GAAG,KAJQ;AAKfC,IAAAA,WALe;AAMfC,IAAAA;AANe,GAOX;AACJ;AACA;AACA,QAAMC,UAAU,GAAGJ,UAAU,GAAGF,IAAH,GAAU,GAAvC,CAHI,CAKJ;;AACA,QAAMO,YAAY,GAAI,YAAWP,IAAK,EAAtC;AAEA,QAAMQ,cAAc,GAAI,GAAEX,MAAM,CAACY,OAAQ;AAC3C,IAAIZ,MAAM,CAACU,YAAD,CAAe;AACzB,IAAIN,KAAK,IAAIJ,MAAM,CAACI,KAAM,EAFxB;;AAIA,MAAIE,IAAJ,EAAU;AACR,wBACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAEC,WAAV;AAAuB,MAAA,SAAS,EAAEI,cAAlC;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBAAO,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEG,cAAvB;AAAA,gBAAwCH;AAAxC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CA5BD;;KAAMN,O;AA8BN,eAAeA,OAAf","sourcesContent":["import styles from \"./Headings.module.css\";\nimport { Link } from \"react-router-dom\";\n// This reusable heading takes in a few parameters:\n// type: The styling (and optionally tag) that the heading component is going to use (h1, h2, h3).\n// white: If true, the color of the font is white. Else, it is the default heading color.\n// headingTag: If true, use the associated heading tag determined by the value of type. Defaulted to true.\nconst Heading = ({\n  type,\n  white,\n  headingTag = true,\n  link = false,\n  destination,\n  children,\n}) => {\n  // This allows us to set the HTML tag depending on the value of type.\n  // If headingTag is false, then it is simply a styled paragraph element.\n  const ElementTag = headingTag ? type : \"p\";\n\n  // Allows us to select the CSS based on type value\n  const headingStyle = `heading--${type}`;\n\n  const headingStyling = `${styles.heading} \n  ${styles[headingStyle]} \n  ${white && styles.white}`;\n\n  if (link) {\n    return (\n      <Link to={destination} className={headingStyling}>\n        {children}\n      </Link>\n    );\n  } else {\n    return <ElementTag className={headingStyling}>{children}</ElementTag>;\n  }\n};\n\nexport default Heading;\n"]},"metadata":{},"sourceType":"module"}