{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/Suggestion.js\";\nimport styles from \"./Suggestion.module.css\";\nimport Tag from \"../../../../UI/Tag/Tag\";\nimport UpvoteButton from \"./UpvoteButton/UpvoteButton\";\nimport CommentLink from \"./CommentLink/CommentLink\";\nimport Heading from \"../../../../UI/Heading/Heading\";\nimport TextBody from \"../../../../UI/TextBody/TextBody\";\nimport editIcon from \"../../../../../assets/shared/icon-edit-feedback-pen.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Suggestion(_ref) {\n  let {\n    suggestionData\n  } = _ref;\n  // Destructuring props\n  const {\n    title,\n    description,\n    category,\n    upvotes,\n    comments,\n    _id\n  } = suggestionData;\n  const user = JSON.parse(localStorage.getItem(\"profile\")); // Checks to see if the current user ID has already upvoted the post.\n  // If the ID has not upvoted, add active styling to the upvote button.\n  // Else, remove active styling.\n\n  const isUpvoted = upvotes.find(upvote => {\n    var _user$result, _user$result2;\n\n    return upvote === ((user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.googleId) || (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2._id));\n  });\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.suggestion,\n    children: [/*#__PURE__*/_jsxDEV(UpvoteButton, {\n      upvotes: upvotes,\n      id: _id,\n      isUpvoted: isUpvoted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles[\"suggestion__info\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"suggestion__settings\"],\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          type: \"h3\",\n          link: true,\n          destination: \"/\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles[\"suggestion__edit_button\"],\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editIcon,\n            className: styles[\"suggestion__edit_icon\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextBody, {\n        type: \"b1\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tag // Properly capitalize the category names\n      , {\n        category: category === \"ux\" || category === \"ui\" ? category.toUpperCase() : category.charAt(0).toUpperCase() + category.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentLink, {\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Suggestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Suggestion\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/Suggestion.js"],"names":["styles","Tag","UpvoteButton","CommentLink","Heading","TextBody","editIcon","Suggestion","suggestionData","title","description","category","upvotes","comments","_id","user","JSON","parse","localStorage","getItem","isUpvoted","find","upvote","result","googleId","suggestion","toUpperCase","charAt","slice"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,QAAP,MAAqB,yDAArB;;AACA,eAAe,SAASC,UAAT,OAAwC;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AACrD;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA,OAAhC;AAAyCC,IAAAA,QAAzC;AAAmDC,IAAAA;AAAnD,MACJN,cADF;AAGA,QAAMO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb,CALqD,CAOrD;AACA;AACA;;AACA,QAAMC,SAAS,GAAGR,OAAO,CAACS,IAAR,CACfC,MAAD;AAAA;;AAAA,WAAYA,MAAM,MAAM,CAAAP,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEQ,MAAN,8DAAcC,QAAd,MAA0BT,IAA1B,aAA0BA,IAA1B,wCAA0BA,IAAI,CAAEQ,MAAhC,kDAA0B,cAAcT,GAAxC,CAAN,CAAlB;AAAA,GADgB,CAAlB;AAIA,sBACE;AAAS,IAAA,SAAS,EAAEd,MAAM,CAACyB,UAA3B;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEb,OAAvB;AAAgC,MAAA,EAAE,EAAEE,GAApC;AAAyC,MAAA,SAAS,EAAEM;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAS,MAAA,SAAS,EAAEpB,MAAM,CAAC,kBAAD,CAA1B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEA,MAAM,CAAC,sBAAD,CAAtB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAC,IAAd;AAAmB,UAAA,IAAI,EAAE,IAAzB;AAA+B,UAAA,WAAW,EAAC,GAA3C;AAAA,oBACGS;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAQ,UAAA,SAAS,EAAET,MAAM,CAAC,yBAAD,CAAzB;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEM,QAAV;AAAoB,YAAA,SAAS,EAAEN,MAAM,CAAC,uBAAD;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEM;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,IAAf;AAAA,kBAAqBI;AAArB;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,QAAC,GAAD,CACE;AADF;AAEE,QAAA,QAAQ,EACNC,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,IAAlC,GACIA,QAAQ,CAACe,WAAT,EADJ,GAEIf,QAAQ,CAACgB,MAAT,CAAgB,CAAhB,EAAmBD,WAAnB,KAAmCf,QAAQ,CAACiB,KAAT,CAAe,CAAf;AAL3C;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eA4BE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEf;AAAvB;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;KA9CuBN,U","sourcesContent":["import styles from \"./Suggestion.module.css\";\nimport Tag from \"../../../../UI/Tag/Tag\";\nimport UpvoteButton from \"./UpvoteButton/UpvoteButton\";\nimport CommentLink from \"./CommentLink/CommentLink\";\nimport Heading from \"../../../../UI/Heading/Heading\";\nimport TextBody from \"../../../../UI/TextBody/TextBody\";\nimport editIcon from \"../../../../../assets/shared/icon-edit-feedback-pen.svg\";\nexport default function Suggestion({ suggestionData }) {\n  // Destructuring props\n  const { title, description, category, upvotes, comments, _id } =\n    suggestionData;\n\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  // Checks to see if the current user ID has already upvoted the post.\n  // If the ID has not upvoted, add active styling to the upvote button.\n  // Else, remove active styling.\n  const isUpvoted = upvotes.find(\n    (upvote) => upvote === (user?.result?.googleId || user?.result?._id)\n  );\n\n  return (\n    <article className={styles.suggestion}>\n      <UpvoteButton upvotes={upvotes} id={_id} isUpvoted={isUpvoted} />\n\n      {/* Suggestion title, description, and tag */}\n      <section className={styles[\"suggestion__info\"]}>\n        <div className={styles[\"suggestion__settings\"]}>\n          <Heading type=\"h3\" link={true} destination=\"/\">\n            {title}\n          </Heading>\n\n          <button className={styles[\"suggestion__edit_button\"]}>\n            <img src={editIcon} className={styles[\"suggestion__edit_icon\"]} />\n          </button>\n          <button>\n            <img src={editIcon} />\n          </button>\n        </div>\n        <TextBody type=\"b1\">{description}</TextBody>\n        <Tag\n          // Properly capitalize the category names\n          category={\n            category === \"ux\" || category === \"ui\"\n              ? category.toUpperCase()\n              : category.charAt(0).toUpperCase() + category.slice(1)\n          }\n        />\n      </section>\n\n      <CommentLink comments={comments} />\n    </article>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}