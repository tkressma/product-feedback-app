{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/Create/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createSuggestion } from \"../../actions/suggestions\";\nimport styles from \"./Create.module.css\";\nimport Heading from \"../UI/Heading/Heading\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport FormSelectInput from \"../UI/Forms/FormSelectInput/FormSelectInput\";\nimport createIcon from \"../../assets/shared/icon-new-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\nimport { SpinnerCircularFixed } from \"spinners-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [newSuggestion, setNewSuggestion] = useState({\n    title: \"\",\n    category: \"Feature\",\n    upvotes: 0,\n    status: \"suggestion\",\n    description: \"\",\n    comments: []\n  });\n  const [addBtnText, setAddBtnText] = useState(\"Add Feedback\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    isLoading\n  } = useSelector(state => state.suggestions);\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Category field must be lowercase before being added to the database.\n\n    dispatch(createSuggestion({ ...newSuggestion,\n      category: newSuggestion.category.toLowerCase()\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      icon: createIcon,\n      backButtonDestination: \"/\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        type: \"h1\",\n        children: \"Create New Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(FormTextInput, {\n          inputId: \"title\",\n          value: newSuggestion.title,\n          labelHeading: \"Feedback Title\",\n          labelCaption: \"Add a short, descriptive headline\",\n          onChange: event => setNewSuggestion({ ...newSuggestion,\n            title: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelectInput, {\n          inputId: \"category\",\n          value: newSuggestion.category,\n          labelHeading: \"Category\",\n          labelCaption: \"Choose a category for your feedback\",\n          onChange: event => setNewSuggestion({ ...newSuggestion,\n            category: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormTextInput, {\n          inputId: \"detail\",\n          value: newSuggestion.description,\n          large: \"true\",\n          labelHeading: \"Feedback Detail\",\n          labelCaption: \"Include any specific comments on what should be improved, added, etc.\",\n          onChange: event => setNewSuggestion({ ...newSuggestion,\n            description: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"button__container\"],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: \"violet\",\n            text: addBtnText,\n            form: \"form\",\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: \"navy-blue\",\n            text: \"Cancel\",\n            onClick: handleSubmit,\n            link: true,\n            destination: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sending feedback...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Done!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Create, \"a/zVZQXWi65IuySRBEX57qwMI6s=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Create/Create.js"],"names":["useState","useDispatch","useSelector","useNavigate","createSuggestion","styles","Heading","Form","FormTextInput","FormSelectInput","createIcon","Button","SpinnerCircularFixed","Create","newSuggestion","setNewSuggestion","title","category","upvotes","status","description","comments","addBtnText","setAddBtnText","dispatch","navigate","isLoading","state","suggestions","handleSubmit","event","preventDefault","toLowerCase","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createSuggestion } from \"../../actions/suggestions\";\nimport styles from \"./Create.module.css\";\nimport Heading from \"../UI/Heading/Heading\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport FormSelectInput from \"../UI/Forms/FormSelectInput/FormSelectInput\";\nimport createIcon from \"../../assets/shared/icon-new-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\n\nimport { SpinnerCircularFixed } from \"spinners-react\";\n\nexport default function Create() {\n  const [newSuggestion, setNewSuggestion] = useState({\n    title: \"\",\n    category: \"Feature\",\n    upvotes: 0,\n    status: \"suggestion\",\n    description: \"\",\n    comments: [],\n  });\n\n  const [addBtnText, setAddBtnText] = useState(\"Add Feedback\");\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isLoading } = useSelector((state) => state.suggestions);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Category field must be lowercase before being added to the database.\n    dispatch(\n      createSuggestion({\n        ...newSuggestion,\n        category: newSuggestion.category.toLowerCase(),\n      })\n    );\n  };\n\n  return (\n    <>\n      <Form icon={createIcon} backButtonDestination=\"/\">\n        <Heading type=\"h1\">Create New Feedback</Heading>\n\n        <form id=\"form\">\n          <FormTextInput\n            inputId=\"title\"\n            value={newSuggestion.title}\n            labelHeading=\"Feedback Title\"\n            labelCaption=\"Add a short, descriptive headline\"\n            onChange={(event) =>\n              setNewSuggestion({ ...newSuggestion, title: event.target.value })\n            }\n          />\n          <FormSelectInput\n            inputId=\"category\"\n            value={newSuggestion.category}\n            labelHeading=\"Category\"\n            labelCaption=\"Choose a category for your feedback\"\n            onChange={(event) =>\n              setNewSuggestion({\n                ...newSuggestion,\n                category: event.target.value,\n              })\n            }\n          />\n          <FormTextInput\n            inputId=\"detail\"\n            value={newSuggestion.description}\n            large=\"true\"\n            labelHeading=\"Feedback Detail\"\n            labelCaption=\"Include any specific comments on what should be improved, added, etc.\"\n            onChange={(event) =>\n              setNewSuggestion({\n                ...newSuggestion,\n                description: event.target.value,\n              })\n            }\n          />\n\n          <div className={styles[\"button__container\"]}>\n            <Button\n              style=\"violet\"\n              text={addBtnText}\n              form=\"form\"\n              onClick={handleSubmit}\n            />\n\n            <Button\n              style=\"navy-blue\"\n              text=\"Cancel\"\n              onClick={handleSubmit}\n              link={true}\n              destination=\"/\"\n            />\n          </div>\n        </form>\n\n        {isLoading ? <h2>Sending feedback...</h2> : <h2>Done!</h2>}\n      </Form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}