{"ast":null,"code":"import { FETCH_ALL, FETCH_FILTERED } from \"../constants/actionTypes\";\nimport * as api from \"../api\"; // Action Creators - Must use redux thunk since we are working with asynchronous data\n\nexport const filterSuggestions = _ref => {\n  let {\n    category,\n    type,\n    order\n  } = _ref;\n  return async dispatch => {\n    console.log(category, type, order);\n\n    try {\n      const {\n        data\n      } = await api.fetchFilteredSuggestions(category, type, order);\n      dispatch({\n        type: FETCH_FILTERED,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\nexport const setFilters = filters => async dispatch => {\n  dispatch({\n    type: \"CHANGE_TYPE\",\n    payload: filters\n  });\n};","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/actions/suggestions.js"],"names":["FETCH_ALL","FETCH_FILTERED","api","filterSuggestions","category","type","order","dispatch","console","log","data","fetchFilteredSuggestions","payload","error","message","setFilters","filters"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,0BAA1C;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB,C,CAEA;;AAEA,OAAO,MAAMC,iBAAiB,GAC5B;AAAA,MAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,GAAD;AAAA,SACA,MAAOC,QAAP,IAAoB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBC,IAAtB,EAA4BC,KAA5B;;AACA,QAAI;AACF,YAAM;AAAEI,QAAAA;AAAF,UAAW,MAAMR,GAAG,CAACS,wBAAJ,CACrBP,QADqB,EAErBC,IAFqB,EAGrBC,KAHqB,CAAvB;AAKAC,MAAAA,QAAQ,CAAC;AAAEF,QAAAA,IAAI,EAAEJ,cAAR;AAAwBW,QAAAA,OAAO,EAAEF;AAAjC,OAAD,CAAR;AACD,KAPD,CAOE,OAAOG,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB;AACD;AACF,GAbD;AAAA,CADK;AAgBP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa,MAAOT,QAAP,IAAoB;AACzDA,EAAAA,QAAQ,CAAC;AAAEF,IAAAA,IAAI,EAAE,aAAR;AAAuBO,IAAAA,OAAO,EAAEI;AAAhC,GAAD,CAAR;AACD,CAFM","sourcesContent":["import { FETCH_ALL, FETCH_FILTERED } from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n\n// Action Creators - Must use redux thunk since we are working with asynchronous data\n\nexport const filterSuggestions =\n  ({ category, type, order }) =>\n  async (dispatch) => {\n    console.log(category, type, order);\n    try {\n      const { data } = await api.fetchFilteredSuggestions(\n        category,\n        type,\n        order\n      );\n      dispatch({ type: FETCH_FILTERED, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\nexport const setFilters = (filters) => async (dispatch) => {\n  dispatch({ type: \"CHANGE_TYPE\", payload: filters });\n};\n"]},"metadata":{},"sourceType":"module"}