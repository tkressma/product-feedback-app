{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/FormTextInput/FormTextInput.js\";\nimport styles from \"../FormInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FormTextInput(_ref) {\n  let {\n    inputId,\n    large = false,\n    labelHeading,\n    labelCaption\n  } = _ref;\n  // If the text input is large, then use a textarea instead of a input of type text.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: inputId,\n      className: styles[\"caption-bold\"],\n      children: [labelHeading, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: inputId,\n        className: styles.caption,\n        children: [labelCaption, large ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: inputId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          id: inputId,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = FormTextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTextInput\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/FormTextInput/FormTextInput.js"],"names":["styles","FormTextInput","inputId","large","labelHeading","labelCaption","caption"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,yBAAnB;;;AACA,eAAe,SAASC,aAAT,OAKZ;AAAA,MALmC;AACpCC,IAAAA,OADoC;AAEpCC,IAAAA,KAAK,GAAG,KAF4B;AAGpCC,IAAAA,YAHoC;AAIpCC,IAAAA;AAJoC,GAKnC;AACD;AACA,sBACE;AAAA,2BACE;AAAO,MAAA,OAAO,EAAEH,OAAhB;AAAyB,MAAA,SAAS,EAAEF,MAAM,CAAC,cAAD,CAA1C;AAAA,iBACGI,YADH,eAEE;AAAO,QAAA,OAAO,EAAEF,OAAhB;AAAyB,QAAA,SAAS,EAAEF,MAAM,CAACM,OAA3C;AAAA,mBACGD,YADH,EAEGF,KAAK,gBACJ;AAAU,UAAA,EAAE,EAAED;AAAd;AAAA;AAAA;AAAA;AAAA,gBADI,gBAGJ;AAAO,UAAA,EAAE,EAAEA,OAAX;AAAoB,UAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD;KAtBuBD,a","sourcesContent":["import styles from \"../FormInput.module.css\";\nexport default function FormTextInput({\n  inputId,\n  large = false,\n  labelHeading,\n  labelCaption,\n}) {\n  // If the text input is large, then use a textarea instead of a input of type text.\n  return (\n    <>\n      <label htmlFor={inputId} className={styles[\"caption-bold\"]}>\n        {labelHeading}\n        <label htmlFor={inputId} className={styles.caption}>\n          {labelCaption}\n          {large ? (\n            <textarea id={inputId} />\n          ) : (\n            <input id={inputId} type=\"text\" />\n          )}\n        </label>\n      </label>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}