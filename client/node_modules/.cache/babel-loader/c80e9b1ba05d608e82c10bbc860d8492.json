{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/UpvoteButton/UpvoteButton.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./UpvoteButton.module.css\";\nimport upvoteIcon from \"../../../../../../assets/shared/icon-arrow-up.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { upvoteSuggestion } from \"../../../../../../actions/suggestions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpvoteButton = _ref => {\n  _s();\n\n  let {\n    upvotes,\n    id,\n    isUpvoted\n  } = _ref;\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleUpvote = () => {\n    // If the user is not signed in, redirect to sign in/sign up\n    if (!user) {\n      navigate(\"/auth\");\n    } else {\n      dispatch(upvoteSuggestion(id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${styles.upvote} ${active && styles[\"upvote--active\"]}`,\n    onClick: handleUpvote,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: upvoteIcon,\n      alt: \"Upvote arrow\",\n      className: `${styles[\"upvote__icon\"]} ${active && styles[\"upvote__icon--active\"]}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: upvotes.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpvoteButton, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = UpvoteButton;\nexport default UpvoteButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpvoteButton\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Home/Main/SuggestionsFeed/Suggestion/UpvoteButton/UpvoteButton.js"],"names":["styles","upvoteIcon","useDispatch","upvoteSuggestion","useNavigate","useEffect","useState","UpvoteButton","upvotes","id","isUpvoted","user","JSON","parse","localStorage","getItem","dispatch","navigate","handleUpvote","upvote","active","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,uCAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,YAAY,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,EAAX;AAAeC,IAAAA;AAAf,GAA+B;AACnD,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,YAAY,GAAG,MAAM;AACzB;AACA,QAAI,CAACP,IAAL,EAAW;AACTM,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,KAFD,MAEO;AACLD,MAAAA,QAAQ,CAACb,gBAAgB,CAACM,EAAD,CAAjB,CAAR;AACD;AACF,GAPD;;AASA,sBACE;AACE,IAAA,SAAS,EAAG,GAAET,MAAM,CAACmB,MAAO,IAAGC,MAAM,IAAIpB,MAAM,CAAC,gBAAD,CAAmB,EADpE;AAEE,IAAA,OAAO,EAAEkB,YAFX;AAAA,4BAIE;AACE,MAAA,GAAG,EAAEjB,UADP;AAEE,MAAA,GAAG,EAAC,cAFN;AAGE,MAAA,SAAS,EAAG,GAAED,MAAM,CAAC,cAAD,CAAiB,IACnCoB,MAAM,IAAIpB,MAAM,CAAC,sBAAD,CACjB;AALH;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AAAA,gBAAOQ,OAAO,CAACa;AAAf;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA7BD;;GAAMd,Y;UAEaL,W,EACAE,W;;;KAHbG,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import styles from \"./UpvoteButton.module.css\";\nimport upvoteIcon from \"../../../../../../assets/shared/icon-arrow-up.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { upvoteSuggestion } from \"../../../../../../actions/suggestions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst UpvoteButton = ({ upvotes, id, isUpvoted }) => {\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleUpvote = () => {\n    // If the user is not signed in, redirect to sign in/sign up\n    if (!user) {\n      navigate(\"/auth\");\n    } else {\n      dispatch(upvoteSuggestion(id));\n    }\n  };\n\n  return (\n    <button\n      className={`${styles.upvote} ${active && styles[\"upvote--active\"]}`}\n      onClick={handleUpvote}\n    >\n      <img\n        src={upvoteIcon}\n        alt=\"Upvote arrow\"\n        className={`${styles[\"upvote__icon\"]} ${\n          active && styles[\"upvote__icon--active\"]\n        }`}\n      />\n      <span>{upvotes.length}</span>\n    </button>\n  );\n};\n\nexport default UpvoteButton;\n"]},"metadata":{},"sourceType":"module"}