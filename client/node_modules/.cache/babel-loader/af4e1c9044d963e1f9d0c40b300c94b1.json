{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Auth.module.css\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport Heading from \"../UI/Heading/Heading\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport addIcon from \"../../assets/shared/icon-new-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isSignup, setIsSignup] = useState(false);\n  const heading = isSignup ? \"Create An Account\" : \"Sign In\";\n  const formChangeBtnText = isSignup ? \"Already a user?\" : \"Create An Account\";\n  const formSubmitBtnText = isSignup ? \"Create Account\" : \"Sign In\";\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(formData);\n  };\n\n  const handleChange = e => {\n    console.log(e.target);\n    setFormData({ ...formData,\n      [e.target.inputId]: e.target.value\n    });\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: \"AUTH\",\n        data: {\n          result,\n          token\n        }\n      }); // Redirect to homepage\n\n      navigate(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google Sign In was unsuccessful. Try again later.\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    icon: addIcon,\n    backButtonDestination: \"/\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      type: \"h1\",\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"create-user\",\n      children: [isSignup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"fullname__container\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"inputlabel__container\"],\n          children: /*#__PURE__*/_jsxDEV(FormTextInput, {\n            inputId: \"firstName\",\n            value: formData.firstName,\n            labelHeading: \"First Name\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"inputlabel__container\"],\n          children: /*#__PURE__*/_jsxDEV(FormTextInput, {\n            inputId: \"lastname\",\n            value: formData.lastname,\n            labelHeading: \"Last Name\",\n            onChange: event => setFormData({ ...formData,\n              lastname: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), isSignup && /*#__PURE__*/_jsxDEV(FormTextInput, {\n        inputId: \"username\",\n        value: formData.username,\n        labelHeading: \"Username\",\n        onChange: event => setFormData({ ...formData,\n          username: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormTextInput, {\n        inputId: \"email\",\n        value: formData.email,\n        labelHeading: \"Email Address\",\n        onChange: event => setFormData({ ...formData,\n          email: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormTextInput, {\n        inputId: \"password\",\n        value: formData.password,\n        labelHeading: \"Password\",\n        type: \"password\",\n        labelCaption: isSignup && \"Password must be at least 8 characters\",\n        onChange: event => setFormData({ ...formData,\n          password: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), isSignup && /*#__PURE__*/_jsxDEV(FormTextInput, {\n        inputId: \"confirmPassword\",\n        value: formData.confirmPassword,\n        labelHeading: \"Repeat Password\",\n        type: \"password\",\n        onChange: event => setFormData({ ...formData,\n          confirmPassword: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"button__container\"],\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: \"violet\",\n          text: formSubmitBtnText,\n          form: \"create-user\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"362804978157-o8ctp5ppr0kdu9a42h90rv8asg3d1eu2.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            style: \"blue\",\n            text: \"Google Sign In\",\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: \"transparent\",\n          text: formChangeBtnText,\n          onClick: e => {\n            e.preventDefault();\n            setIsSignup(!isSignup);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"cwC/zTEm23Ep67r5kgBWwop2Bu8=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Auth/Auth.js"],"names":["React","useState","styles","Form","Heading","FormTextInput","addIcon","Button","GoogleLogin","useDispatch","useNavigate","Auth","dispatch","navigate","isSignup","setIsSignup","heading","formChangeBtnText","formSubmitBtnText","formData","setFormData","firstName","lastName","email","password","confirmPassword","handleSubmit","event","preventDefault","console","log","handleChange","e","target","inputId","value","googleSuccess","res","result","profileObj","token","tokenId","type","data","error","message","googleFailure","lastname","username","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Auth.module.css\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport Heading from \"../UI/Heading/Heading\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport addIcon from \"../../assets/shared/icon-new-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isSignup, setIsSignup] = useState(false);\n  const heading = isSignup ? \"Create An Account\" : \"Sign In\";\n  const formChangeBtnText = isSignup ? \"Already a user?\" : \"Create An Account\";\n  const formSubmitBtnText = isSignup ? \"Create Account\" : \"Sign In\";\n\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(formData);\n  };\n\n  const handleChange = (e) => {\n    console.log(e.target);\n    setFormData({ ...formData, [e.target.inputId]: e.target.value });\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: \"AUTH\", data: { result, token } });\n      // Redirect to homepage\n      navigate(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const googleFailure = () => {\n    console.log(\"Google Sign In was unsuccessful. Try again later.\");\n  };\n\n  return (\n    <Form icon={addIcon} backButtonDestination=\"/\">\n      <Heading type=\"h1\">{heading}</Heading>\n\n      <form id=\"create-user\">\n        {isSignup && (\n          <div className={styles[\"fullname__container\"]}>\n            <div className={styles[\"inputlabel__container\"]}>\n              <FormTextInput\n                inputId=\"firstName\"\n                value={formData.firstName}\n                labelHeading=\"First Name\"\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className={styles[\"inputlabel__container\"]}>\n              <FormTextInput\n                inputId=\"lastname\"\n                value={formData.lastname}\n                labelHeading=\"Last Name\"\n                onChange={(event) =>\n                  setFormData({ ...formData, lastname: event.target.value })\n                }\n              />\n            </div>\n          </div>\n        )}\n\n        {isSignup && (\n          <FormTextInput\n            inputId=\"username\"\n            value={formData.username}\n            labelHeading=\"Username\"\n            onChange={(event) =>\n              setFormData({ ...formData, username: event.target.value })\n            }\n          />\n        )}\n\n        <FormTextInput\n          inputId=\"email\"\n          value={formData.email}\n          labelHeading=\"Email Address\"\n          onChange={(event) =>\n            setFormData({ ...formData, email: event.target.value })\n          }\n        />\n\n        <FormTextInput\n          inputId=\"password\"\n          value={formData.password}\n          labelHeading=\"Password\"\n          type=\"password\"\n          labelCaption={isSignup && \"Password must be at least 8 characters\"}\n          onChange={(event) =>\n            setFormData({ ...formData, password: event.target.value })\n          }\n        />\n        {isSignup && (\n          <FormTextInput\n            inputId=\"confirmPassword\"\n            value={formData.confirmPassword}\n            labelHeading=\"Repeat Password\"\n            type=\"password\"\n            onChange={(event) =>\n              setFormData({ ...formData, confirmPassword: event.target.value })\n            }\n          />\n        )}\n\n        <div className={styles[\"button__container\"]}>\n          <Button\n            style=\"violet\"\n            text={formSubmitBtnText}\n            form=\"create-user\"\n            onClick={handleSubmit}\n          />\n\n          <GoogleLogin\n            clientId=\"362804978157-o8ctp5ppr0kdu9a42h90rv8asg3d1eu2.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                style=\"blue\"\n                text=\"Google Sign In\"\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n              />\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n\n          <Button\n            style=\"transparent\"\n            text={formChangeBtnText}\n            onClick={(e) => {\n              e.preventDefault();\n              setIsSignup(!isSignup);\n            }}\n          />\n        </div>\n      </form>\n    </Form>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}