{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/Create/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createSuggestion } from \"../../actions/suggestions\";\nimport styles from \"./Create.module.css\";\nimport Heading from \"../UI/Heading/Heading\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport FormSelectInput from \"../UI/Forms/FormSelectInput/FormSelectInput\";\nimport createIcon from \"../../assets/shared/icon-new-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\nimport { SpinnerCircularFixed } from \"spinners-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [newSuggestion, setNewSuggestion] = useState({\n    title: \"\",\n    category: \"Feature\",\n    upvotes: 0,\n    status: \"suggestion\",\n    description: \"\",\n    comments: []\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    isLoading\n  } = useSelector(state => state.suggestions);\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Category field must be lowercase before being added to the database.\n\n    dispatch(createSuggestion({ ...newSuggestion,\n      category: newSuggestion.category.toLowerCase()\n    }));\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    icon: createIcon,\n    backButtonDestination: \"/\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      type: \"h1\",\n      children: \"Create New Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FormTextInput, {\n          inputId: \"title\",\n          value: newSuggestion.title,\n          labelHeading: \"Feedback Title\",\n          labelCaption: \"Add a short, descriptive headline\",\n          onChange: event => setNewSuggestion({ ...newSuggestion,\n            title: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormSelectInput, {\n          inputId: \"category\",\n          value: newSuggestion.category,\n          labelHeading: \"Category\",\n          labelCaption: \"Choose a category for your feedback\",\n          onChange: event => setNewSuggestion({ ...newSuggestion,\n            category: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormTextInput, {\n          inputId: \"detail\",\n          value: newSuggestion.description,\n          large: \"true\",\n          labelHeading: \"Feedback Detail\",\n          labelCaption: \"Include any specific comments on what should be improved, added, etc.\",\n          onChange: event => setNewSuggestion({ ...newSuggestion,\n            description: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(SpinnerCircularFixed, {\n        color: \"hsl(230, 76%, 59%)\",\n        enabled: isLoading,\n        secondaryColor: \"#f2f5ff\",\n        size: 50,\n        style: {\n          margin: \"0 auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"button__container\"],\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: \"violet\",\n          text: \"Add Feedback\",\n          form: \"form\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: \"navy-blue\",\n          text: \"Cancel\",\n          onClick: handleSubmit,\n          link: true,\n          destination: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"K2Sig2h0sOwjz0VGzq5MU7xhMvI=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Create/Create.js"],"names":["useState","useDispatch","useSelector","useNavigate","createSuggestion","styles","Heading","Form","FormTextInput","FormSelectInput","createIcon","Button","SpinnerCircularFixed","Create","newSuggestion","setNewSuggestion","title","category","upvotes","status","description","comments","dispatch","navigate","isLoading","state","suggestions","handleSubmit","event","preventDefault","toLowerCase","target","value","margin"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SAASC,oBAAT,QAAqC,gBAArC;;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC;AACjDgB,IAAAA,KAAK,EAAE,EAD0C;AAEjDC,IAAAA,QAAQ,EAAE,SAFuC;AAGjDC,IAAAA,OAAO,EAAE,CAHwC;AAIjDC,IAAAA,MAAM,EAAE,YAJyC;AAKjDC,IAAAA,WAAW,EAAE,EALoC;AAMjDC,IAAAA,QAAQ,EAAE;AANuC,GAAD,CAAlD;AASA,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAgBtB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAAjC;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN,GAD8B,CAG9B;;AACAP,IAAAA,QAAQ,CACNlB,gBAAgB,CAAC,EACf,GAAGU,aADY;AAEfG,MAAAA,QAAQ,EAAEH,aAAa,CAACG,QAAd,CAAuBa,WAAvB;AAFK,KAAD,CADV,CAAR;AAOAP,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAZD;;AAcA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEb,UAAZ;AAAwB,IAAA,qBAAqB,EAAC,GAA9C;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA,iBACGc,SAAS,gBACR;AAAA,gCACE,QAAC,aAAD;AACE,UAAA,OAAO,EAAC,OADV;AAEE,UAAA,KAAK,EAAEV,aAAa,CAACE,KAFvB;AAGE,UAAA,YAAY,EAAC,gBAHf;AAIE,UAAA,YAAY,EAAC,mCAJf;AAKE,UAAA,QAAQ,EAAGY,KAAD,IACRb,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfE,YAAAA,KAAK,EAAEY,KAAK,CAACG,MAAN,CAAaC;AAFL,WAAD;AANpB;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,eAAD;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,KAAK,EAAElB,aAAa,CAACG,QAFvB;AAGE,UAAA,YAAY,EAAC,UAHf;AAIE,UAAA,YAAY,EAAC,qCAJf;AAKE,UAAA,QAAQ,EAAGW,KAAD,IACRb,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfG,YAAAA,QAAQ,EAAEW,KAAK,CAACG,MAAN,CAAaC;AAFR,WAAD;AANpB;AAAA;AAAA;AAAA;AAAA,gBAbF,eAyBE,QAAC,aAAD;AACE,UAAA,OAAO,EAAC,QADV;AAEE,UAAA,KAAK,EAAElB,aAAa,CAACM,WAFvB;AAGE,UAAA,KAAK,EAAC,MAHR;AAIE,UAAA,YAAY,EAAC,iBAJf;AAKE,UAAA,YAAY,EAAC,uEALf;AAME,UAAA,QAAQ,EAAGQ,KAAD,IACRb,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfM,YAAAA,WAAW,EAAEQ,KAAK,CAACG,MAAN,CAAaC;AAFX,WAAD;AAPpB;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA,sBADQ,gBAyCR,QAAC,oBAAD;AACE,QAAA,KAAK,EAAC,oBADR;AAEE,QAAA,OAAO,EAAER,SAFX;AAGE,QAAA,cAAc,EAAC,SAHjB;AAIE,QAAA,IAAI,EAAE,EAJR;AAKE,QAAA,KAAK,EAAE;AACLS,UAAAA,MAAM,EAAE;AADH;AALT;AAAA;AAAA;AAAA;AAAA,cA1CJ,eAqDE;AAAK,QAAA,SAAS,EAAE5B,MAAM,CAAC,mBAAD,CAAtB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,QADR;AAEE,UAAA,IAAI,EAAC,cAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,OAAO,EAAEsB;AAJX;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,WADR;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAEA,YAHX;AAIE,UAAA,IAAI,EAAE,IAJR;AAKE,UAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cArDF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4ED;;GAxGuBd,M;UAULZ,W,EACAE,W,EACKD,W;;;KAZAW,M","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createSuggestion } from \"../../actions/suggestions\";\nimport styles from \"./Create.module.css\";\nimport Heading from \"../UI/Heading/Heading\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport FormSelectInput from \"../UI/Forms/FormSelectInput/FormSelectInput\";\nimport createIcon from \"../../assets/shared/icon-new-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\n\nimport { SpinnerCircularFixed } from \"spinners-react\";\n\nexport default function Create() {\n  const [newSuggestion, setNewSuggestion] = useState({\n    title: \"\",\n    category: \"Feature\",\n    upvotes: 0,\n    status: \"suggestion\",\n    description: \"\",\n    comments: [],\n  });\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isLoading } = useSelector((state) => state.suggestions);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Category field must be lowercase before being added to the database.\n    dispatch(\n      createSuggestion({\n        ...newSuggestion,\n        category: newSuggestion.category.toLowerCase(),\n      })\n    );\n\n    navigate(\"/\");\n  };\n\n  return (\n    <Form icon={createIcon} backButtonDestination=\"/\">\n      <Heading type=\"h1\">Create New Feedback</Heading>\n\n      <form id=\"form\">\n        {isLoading ? (\n          <>\n            <FormTextInput\n              inputId=\"title\"\n              value={newSuggestion.title}\n              labelHeading=\"Feedback Title\"\n              labelCaption=\"Add a short, descriptive headline\"\n              onChange={(event) =>\n                setNewSuggestion({\n                  ...newSuggestion,\n                  title: event.target.value,\n                })\n              }\n            />\n            <FormSelectInput\n              inputId=\"category\"\n              value={newSuggestion.category}\n              labelHeading=\"Category\"\n              labelCaption=\"Choose a category for your feedback\"\n              onChange={(event) =>\n                setNewSuggestion({\n                  ...newSuggestion,\n                  category: event.target.value,\n                })\n              }\n            />\n            <FormTextInput\n              inputId=\"detail\"\n              value={newSuggestion.description}\n              large=\"true\"\n              labelHeading=\"Feedback Detail\"\n              labelCaption=\"Include any specific comments on what should be improved, added, etc.\"\n              onChange={(event) =>\n                setNewSuggestion({\n                  ...newSuggestion,\n                  description: event.target.value,\n                })\n              }\n            />\n          </>\n        ) : (\n          <SpinnerCircularFixed\n            color=\"hsl(230, 76%, 59%)\"\n            enabled={isLoading}\n            secondaryColor=\"#f2f5ff\"\n            size={50}\n            style={{\n              margin: \"0 auto\",\n            }}\n          />\n        )}\n\n        <div className={styles[\"button__container\"]}>\n          <Button\n            style=\"violet\"\n            text=\"Add Feedback\"\n            form=\"form\"\n            onClick={handleSubmit}\n          />\n\n          <Button\n            style=\"navy-blue\"\n            text=\"Cancel\"\n            onClick={handleSubmit}\n            link={true}\n            destination=\"/\"\n          />\n        </div>\n      </form>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}