{"ast":null,"code":"import { bindActionCreators } from \"redux\";\nimport { FETCH_ALL, FETCH_SORTED, FETCH_FILTERED } from \"../constants/actionTypes\";\nexport default (function () {\n  let suggestions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case \"CREATE\":\n      return suggestions;\n\n    case FETCH_SORTED:\n      return action.payload;\n\n    case FETCH_FILTERED:\n      return action.payload;\n\n    default:\n      return suggestions;\n  }\n}); // import {\n//   FETCH_ALL,\n//   FETCH_SORTED,\n//   FETCH_FILTERED,\n// } from \"../constants/actionTypes\";\n// export default (suggestions = [], action) => {\n//   switch (action.type) {\n//     case FETCH_ALL:\n//       return action.payload;\n//     case \"CREATE\":\n//       return suggestions;\n//     case FETCH_SORTED:\n//       const sortedSuggestions = [...suggestions];\n//       return sortedSuggestions.filter((suggestion) =>\n//         action.payload.some(\n//           (fetchedSuggestion) => fetchedSuggestion[\"_id\"] === suggestion[\"_id\"]\n//         )\n//       );\n//     case FETCH_FILTERED:\n//       const filteredSuggestions = [...suggestions];\n//       return filteredSuggestions.filter((suggestion) =>\n//         action.payload.some(\n//           (fetchedSuggestion) => fetchedSuggestion[\"_id\"] === suggestion[\"_id\"]\n//         )\n//       );\n//     default:\n//       return suggestions;\n//   }\n// };","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/reducers/suggestions.js"],"names":["bindActionCreators","FETCH_ALL","FETCH_SORTED","FETCH_FILTERED","suggestions","action","type","payload"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,cAHF,QAIO,0BAJP;AAKA,gBAAe,YAA8B;AAAA,MAA7BC,WAA6B,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,SAAL;AACE,aAAOI,MAAM,CAACE,OAAd;;AACF,SAAK,QAAL;AACE,aAAOH,WAAP;;AACF,SAAKF,YAAL;AACE,aAAOG,MAAM,CAACE,OAAd;;AACF,SAAKJ,cAAL;AACE,aAAOE,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,WAAP;AAVJ;AAYD,CAbD,E,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { bindActionCreators } from \"redux\";\nimport {\n  FETCH_ALL,\n  FETCH_SORTED,\n  FETCH_FILTERED,\n} from \"../constants/actionTypes\";\nexport default (suggestions = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case \"CREATE\":\n      return suggestions;\n    case FETCH_SORTED:\n      return action.payload;\n    case FETCH_FILTERED:\n      return action.payload;\n    default:\n      return suggestions;\n  }\n};\n\n// import {\n//   FETCH_ALL,\n//   FETCH_SORTED,\n//   FETCH_FILTERED,\n// } from \"../constants/actionTypes\";\n// export default (suggestions = [], action) => {\n//   switch (action.type) {\n//     case FETCH_ALL:\n//       return action.payload;\n//     case \"CREATE\":\n//       return suggestions;\n//     case FETCH_SORTED:\n//       const sortedSuggestions = [...suggestions];\n\n//       return sortedSuggestions.filter((suggestion) =>\n//         action.payload.some(\n//           (fetchedSuggestion) => fetchedSuggestion[\"_id\"] === suggestion[\"_id\"]\n//         )\n//       );\n//     case FETCH_FILTERED:\n//       const filteredSuggestions = [...suggestions];\n\n//       return filteredSuggestions.filter((suggestion) =>\n//         action.payload.some(\n//           (fetchedSuggestion) => fetchedSuggestion[\"_id\"] === suggestion[\"_id\"]\n//         )\n//       );\n//     default:\n//       return suggestions;\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}