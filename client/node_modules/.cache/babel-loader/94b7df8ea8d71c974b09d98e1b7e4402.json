{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Button/Button.js\";\nimport styles from \"./Button.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { SpinnerCircularFixed } from \"spinners-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button(_ref) {\n  let {\n    style,\n    // Background color of the button\n    text,\n    // Inner text of the button\n    form,\n    // If the button submits the form, what form does it submit?\n    onClick,\n    link = false,\n    // Is the button a router link?\n    destination // IF it is a link, where should it route to?\n\n  } = _ref;\n  const buttonStyling = `button--${style}`;\n  const buttonStyles = `${styles.button} ${styles[buttonStyling]}`; // If link is true, create a new styled router link to the given destination.\n  // Else, create a regular html button.\n\n  if (link === true) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: destination,\n      className: buttonStyles,\n      children: [text, /*#__PURE__*/_jsxDEV(SpinnerCircularFixed, {\n        color: \"hsl(230, 76%, 59%)\",\n        secondaryColor: \"#f2f5ff\",\n        size: 50,\n        style: {\n          display: \"block\",\n          margin: \"4rem auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      form: form,\n      onClick: onClick,\n      className: buttonStyles,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Button/Button.js"],"names":["styles","Link","SpinnerCircularFixed","Button","style","text","form","onClick","link","destination","buttonStyling","buttonStyles","button","display","margin"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,oBAAT,QAAqC,gBAArC;;AAEA,eAAe,SAASC,MAAT,OAOZ;AAAA,MAP4B;AAC7BC,IAAAA,KAD6B;AACtB;AACPC,IAAAA,IAF6B;AAEvB;AACNC,IAAAA,IAH6B;AAGvB;AACNC,IAAAA,OAJ6B;AAK7BC,IAAAA,IAAI,GAAG,KALsB;AAKf;AACdC,IAAAA,WAN6B,CAMhB;;AANgB,GAO5B;AACD,QAAMC,aAAa,GAAI,WAAUN,KAAM,EAAvC;AACA,QAAMO,YAAY,GAAI,GAAEX,MAAM,CAACY,MAAO,IAAGZ,MAAM,CAACU,aAAD,CAAgB,EAA/D,CAFC,CAID;AACA;;AACA,MAAIF,IAAI,KAAK,IAAb,EAAmB;AACjB,wBACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAEC,WAAV;AAAuB,MAAA,SAAS,EAAEE,YAAlC;AAAA,iBACGN,IADH,eAEE,QAAC,oBAAD;AACE,QAAA,KAAK,EAAC,oBADR;AAEE,QAAA,cAAc,EAAC,SAFjB;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAE;AACLQ,UAAAA,OAAO,EAAE,OADJ;AAELC,UAAAA,MAAM,EAAE;AAFH;AAJT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAfD,MAeO;AACL,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAER,IAFR;AAGE,MAAA,OAAO,EAAEC,OAHX;AAIE,MAAA,SAAS,EAAEI,YAJb;AAAA,gBAMGN;AANH;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;AACF;KAxCuBF,M","sourcesContent":["import styles from \"./Button.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { SpinnerCircularFixed } from \"spinners-react\";\n\nexport default function Button({\n  style, // Background color of the button\n  text, // Inner text of the button\n  form, // If the button submits the form, what form does it submit?\n  onClick,\n  link = false, // Is the button a router link?\n  destination, // IF it is a link, where should it route to?\n}) {\n  const buttonStyling = `button--${style}`;\n  const buttonStyles = `${styles.button} ${styles[buttonStyling]}`;\n\n  // If link is true, create a new styled router link to the given destination.\n  // Else, create a regular html button.\n  if (link === true) {\n    return (\n      <Link to={destination} className={buttonStyles}>\n        {text}\n        <SpinnerCircularFixed\n          color=\"hsl(230, 76%, 59%)\"\n          secondaryColor=\"#f2f5ff\"\n          size={50}\n          style={{\n            display: \"block\",\n            margin: \"4rem auto\",\n          }}\n        />\n      </Link>\n    );\n  } else {\n    return (\n      <button\n        type=\"submit\"\n        form={form}\n        onClick={onClick}\n        className={buttonStyles}\n      >\n        {text}\n      </button>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}