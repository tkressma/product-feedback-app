{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/Create/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createSuggestion } from \"../../actions/suggestions\";\nimport styles from \"./Create.module.css\";\nimport Heading from \"../UI/Heading/Heading\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport FormSelectInput from \"../UI/Forms/FormSelectInput/FormSelectInput\";\nimport createIcon from \"../../assets/shared/icon-new-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\nimport checkIcon from \"../../assets/shared/icon-check.svg\";\nimport { SpinnerCircularFixed } from \"spinners-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [newSuggestion, setNewSuggestion] = useState({\n    title: \"\",\n    category: \"Feature\",\n    upvotes: 0,\n    status: \"suggestion\",\n    description: \"\",\n    comments: []\n  });\n  const [addBtnText, setAddBtnText] = useState(\"Add Feedback\");\n  const [submitted, setSubmitted] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    isLoading\n  } = useSelector(state => state.suggestions);\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Category field must be lowercase before being added to the database.\n\n    dispatch(createSuggestion({ ...newSuggestion,\n      category: newSuggestion.category.toLowerCase()\n    }));\n    setAddBtnText(\"Done\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    icon: createIcon,\n    backButtonDestination: \"/\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      type: \"h1\",\n      children: \"Create New Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(FormTextInput, {\n        inputId: \"title\",\n        value: newSuggestion.title,\n        labelHeading: \"Feedback Title\",\n        labelCaption: \"Add a short, descriptive headline\",\n        onChange: event => setNewSuggestion({ ...newSuggestion,\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSelectInput, {\n        inputId: \"category\",\n        value: newSuggestion.category,\n        labelHeading: \"Category\",\n        labelCaption: \"Choose a category for your feedback\",\n        onChange: event => setNewSuggestion({ ...newSuggestion,\n          category: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormTextInput, {\n        inputId: \"detail\",\n        value: newSuggestion.description,\n        large: \"true\",\n        labelHeading: \"Feedback Detail\",\n        labelCaption: \"Include any specific comments on what should be improved, added, etc.\",\n        onChange: event => setNewSuggestion({ ...newSuggestion,\n          description: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"button__container\"],\n        children: [isLoading || submitted ? /*#__PURE__*/_jsxDEV(SpinnerCircularFixed, {\n          color: \"hsl(230, 76%, 59%)\",\n          secondaryColor: \"#f2f5ff\",\n          style: {\n            height: 43.98,\n            margin: \"0 47.45px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          style: \"violet\",\n          text: addBtnText,\n          form: \"form\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: \"navy-blue\",\n          text: \"Cancel\",\n          onClick: handleSubmit,\n          link: true,\n          destination: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"AaJsPqH+jgnTW+Mn8L9ByzF4qCo=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Create/Create.js"],"names":["useState","useDispatch","useSelector","useNavigate","createSuggestion","styles","Heading","Form","FormTextInput","FormSelectInput","createIcon","Button","checkIcon","SpinnerCircularFixed","Create","newSuggestion","setNewSuggestion","title","category","upvotes","status","description","comments","addBtnText","setAddBtnText","submitted","setSubmitted","dispatch","navigate","isLoading","state","suggestions","handleSubmit","event","preventDefault","toLowerCase","target","value","height","margin"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createSuggestion } from \"../../actions/suggestions\";\nimport styles from \"./Create.module.css\";\nimport Heading from \"../UI/Heading/Heading\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport FormSelectInput from \"../UI/Forms/FormSelectInput/FormSelectInput\";\nimport createIcon from \"../../assets/shared/icon-new-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\nimport checkIcon from \"../../assets/shared/icon-check.svg\";\n\nimport { SpinnerCircularFixed } from \"spinners-react\";\n\nexport default function Create() {\n  const [newSuggestion, setNewSuggestion] = useState({\n    title: \"\",\n    category: \"Feature\",\n    upvotes: 0,\n    status: \"suggestion\",\n    description: \"\",\n    comments: [],\n  });\n\n  const [addBtnText, setAddBtnText] = useState(\"Add Feedback\");\n  const [submitted, setSubmitted] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isLoading } = useSelector((state) => state.suggestions);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Category field must be lowercase before being added to the database.\n    dispatch(\n      createSuggestion({\n        ...newSuggestion,\n        category: newSuggestion.category.toLowerCase(),\n      })\n    );\n\n    setAddBtnText(\"Done\");\n  };\n\n  return (\n    <Form icon={createIcon} backButtonDestination=\"/\">\n      <Heading type=\"h1\">Create New Feedback</Heading>\n\n      <form id=\"form\">\n        <FormTextInput\n          inputId=\"title\"\n          value={newSuggestion.title}\n          labelHeading=\"Feedback Title\"\n          labelCaption=\"Add a short, descriptive headline\"\n          onChange={(event) =>\n            setNewSuggestion({ ...newSuggestion, title: event.target.value })\n          }\n        />\n        <FormSelectInput\n          inputId=\"category\"\n          value={newSuggestion.category}\n          labelHeading=\"Category\"\n          labelCaption=\"Choose a category for your feedback\"\n          onChange={(event) =>\n            setNewSuggestion({\n              ...newSuggestion,\n              category: event.target.value,\n            })\n          }\n        />\n        <FormTextInput\n          inputId=\"detail\"\n          value={newSuggestion.description}\n          large=\"true\"\n          labelHeading=\"Feedback Detail\"\n          labelCaption=\"Include any specific comments on what should be improved, added, etc.\"\n          onChange={(event) =>\n            setNewSuggestion({\n              ...newSuggestion,\n              description: event.target.value,\n            })\n          }\n        />\n\n        <div className={styles[\"button__container\"]}>\n          {isLoading || submitted ? (\n            <SpinnerCircularFixed\n              color=\"hsl(230, 76%, 59%)\"\n              secondaryColor=\"#f2f5ff\"\n              style={{ height: 43.98, margin: \"0 47.45px\" }}\n            />\n          ) : (\n            <Button\n              style=\"violet\"\n              text={addBtnText}\n              form=\"form\"\n              onClick={handleSubmit}\n            />\n          )}\n\n          <Button\n            style=\"navy-blue\"\n            text=\"Cancel\"\n            onClick={handleSubmit}\n            link={true}\n            destination=\"/\"\n          />\n        </div>\n      </form>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}