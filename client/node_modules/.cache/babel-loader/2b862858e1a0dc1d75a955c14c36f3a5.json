{"ast":null,"code":"import { FETCH_ALL, FETCH_FILTERED } from \"../constants/actionTypes\";\nimport * as api from \"../api\"; // Action Creators\n// Must use redux thunk since we are working with asynchronous data\n\nexport const getSuggestions = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchSuggestions();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const filterSuggestions = (category, type, order) => async dispatch => {\n  console.log(category);\n\n  try {\n    if (category === \"all\") {\n      const {\n        data\n      } = await api.fetchSuggestions();\n      dispatch({\n        type: FETCH_ALL,\n        payload: data\n      });\n    } else if (category !== \"all\") {\n      const {\n        data: {\n          data\n        }\n      } = await api.fetchFilteredSuggestions(category, type, order);\n      dispatch({\n        type: FETCH_FILTERED,\n        payload: data\n      });\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const setFilters = filters => async dispatch => {\n  dispatch({\n    type: \"CHANGE_TYPE\",\n    payload: filters\n  });\n};","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/actions/suggestions.js"],"names":["FETCH_ALL","FETCH_FILTERED","api","getSuggestions","dispatch","data","fetchSuggestions","type","payload","error","console","log","message","filterSuggestions","category","order","fetchFilteredSuggestions","setFilters","filters"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,0BAA1C;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB,C,CAEA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACI,gBAAJ,EAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,SAAR;AAAmBQ,MAAAA,OAAO,EAAEH;AAA5B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CAPM;AASP,OAAO,MAAMC,iBAAiB,GAC5B,CAACC,QAAD,EAAWP,IAAX,EAAiBQ,KAAjB,KAA2B,MAAOX,QAAP,IAAoB;AAC7CM,EAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;;AACA,MAAI;AACF,QAAIA,QAAQ,KAAK,KAAjB,EAAwB;AACtB,YAAM;AAAET,QAAAA;AAAF,UAAW,MAAMH,GAAG,CAACI,gBAAJ,EAAvB;AACAF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,SAAR;AAAmBQ,QAAAA,OAAO,EAAEH;AAA5B,OAAD,CAAR;AACD,KAHD,MAGO,IAAIS,QAAQ,KAAK,KAAjB,EAAwB;AAC7B,YAAM;AACJT,QAAAA,IAAI,EAAE;AAAEA,UAAAA;AAAF;AADF,UAEF,MAAMH,GAAG,CAACc,wBAAJ,CAA6BF,QAA7B,EAAuCP,IAAvC,EAA6CQ,KAA7C,CAFV;AAGAX,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEN,cAAR;AAAwBO,QAAAA,OAAO,EAAEH;AAAjC,OAAD,CAAR;AACD;AACF,GAVD,CAUE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CAhBI;AAkBP,OAAO,MAAMK,UAAU,GAAIC,OAAD,IAAa,MAAOd,QAAP,IAAoB;AACzDA,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEU;AAAhC,GAAD,CAAR;AACD,CAFM","sourcesContent":["import { FETCH_ALL, FETCH_FILTERED } from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n\n// Action Creators\n// Must use redux thunk since we are working with asynchronous data\nexport const getSuggestions = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchSuggestions();\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const filterSuggestions =\n  (category, type, order) => async (dispatch) => {\n    console.log(category);\n    try {\n      if (category === \"all\") {\n        const { data } = await api.fetchSuggestions();\n        dispatch({ type: FETCH_ALL, payload: data });\n      } else if (category !== \"all\") {\n        const {\n          data: { data },\n        } = await api.fetchFilteredSuggestions(category, type, order);\n        dispatch({ type: FETCH_FILTERED, payload: data });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\nexport const setFilters = (filters) => async (dispatch) => {\n  dispatch({ type: \"CHANGE_TYPE\", payload: filters });\n};\n"]},"metadata":{},"sourceType":"module"}