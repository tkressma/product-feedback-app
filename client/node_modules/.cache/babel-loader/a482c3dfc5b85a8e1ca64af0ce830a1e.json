{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/FormTextInput/FormTextInput.js\";\nimport styles from \"../FormInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FormTextInput(_ref) {\n  let {\n    inputId,\n    large = false,\n    labelHeading,\n    labelCaption\n  } = _ref;\n  // If the text input is large, then use a textarea instead of a input of type text.\n  let inputBox;\n\n  if (large) {\n    inputBox = /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: inputId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  } else {\n    inputBox = /*#__PURE__*/_jsxDEV(\"input\", {\n      id: inputId,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: inputId,\n      className: styles[\"caption-bold\"],\n      children: labelHeading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: inputId,\n      className: styles.caption,\n      children: labelCaption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), inputBox]\n  }, void 0, true);\n}\n_c = FormTextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTextInput\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/FormTextInput/FormTextInput.js"],"names":["styles","FormTextInput","inputId","large","labelHeading","labelCaption","inputBox","caption"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,yBAAnB;;;AACA,eAAe,SAASC,aAAT,OAKZ;AAAA,MALmC;AACpCC,IAAAA,OADoC;AAEpCC,IAAAA,KAAK,GAAG,KAF4B;AAGpCC,IAAAA,YAHoC;AAIpCC,IAAAA;AAJoC,GAKnC;AACD;AACA,MAAIC,QAAJ;;AACA,MAAIH,KAAJ,EAAW;AACTG,IAAAA,QAAQ,gBAAG;AAAU,MAAA,EAAE,EAAEJ;AAAd;AAAA;AAAA;AAAA;AAAA,YAAX;AACD,GAFD,MAEO;AACLI,IAAAA,QAAQ,gBAAG;AAAO,MAAA,EAAE,EAAEJ,OAAX;AAAoB,MAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEA,OAAhB;AAAyB,MAAA,SAAS,EAAEF,MAAM,CAAC,cAAD,CAA1C;AAAA,gBACGI;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAO,MAAA,OAAO,EAAEF,OAAhB;AAAyB,MAAA,SAAS,EAAEF,MAAM,CAACO,OAA3C;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,EAOGC,QAPH;AAAA,kBADF;AAWD;KAzBuBL,a","sourcesContent":["import styles from \"../FormInput.module.css\";\nexport default function FormTextInput({\n  inputId,\n  large = false,\n  labelHeading,\n  labelCaption,\n}) {\n  // If the text input is large, then use a textarea instead of a input of type text.\n  let inputBox;\n  if (large) {\n    inputBox = <textarea id={inputId} />;\n  } else {\n    inputBox = <input id={inputId} type=\"text\" />;\n  }\n\n  return (\n    <>\n      <label htmlFor={inputId} className={styles[\"caption-bold\"]}>\n        {labelHeading}\n      </label>\n      <label htmlFor={inputId} className={styles.caption}>\n        {labelCaption}\n      </label>\n      {inputBox}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}