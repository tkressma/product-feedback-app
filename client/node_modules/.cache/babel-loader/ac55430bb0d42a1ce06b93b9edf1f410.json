{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/SuggestionPage/CommentSection/Replies/ReplyForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"./ReplyForm.module.css\";\nimport Button from \"../../../UI/Button/Button\";\nimport { replyToComment } from \"../../../../actions/suggestions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReplyForm = _ref => {\n  _s();\n\n  let {\n    replyUser,\n    parentCommentId,\n    closeForm,\n    updateReplies\n  } = _ref;\n  const [reply, setReply] = useState(\"\");\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n\n  const handleReplyComment = async e => {\n    e.preventDefault();\n    const newReplies = await dispatch(replyToComment(reply, replyUser, id, parentCommentId));\n    console.log(newReplies);\n    updateReplies(newReplies);\n    closeForm();\n  };\n\n  const handleReplyChange = e => {\n    setReply(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"add-reply\",\n    className: styles.replyform,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: styles.replytext,\n      placeholder: `Replying to @${replyUser}`,\n      onChange: handleReplyChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      btnStyle: \"violet\",\n      form: \"add-reply\",\n      onClick: handleReplyComment,\n      text: \"Post Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReplyForm, \"2C1w6CUk8SnhDZjEP9SHd37xMQk=\", false, function () {\n  return [useDispatch, useParams];\n});\n\n_c = ReplyForm;\nexport default ReplyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReplyForm\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/SuggestionPage/CommentSection/Replies/ReplyForm.js"],"names":["React","useState","useDispatch","useParams","styles","Button","replyToComment","ReplyForm","replyUser","parentCommentId","closeForm","updateReplies","reply","setReply","dispatch","id","handleReplyComment","e","preventDefault","newReplies","console","log","handleReplyChange","target","value","replyform","replytext"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,cAAT,QAA+B,iCAA/B;;;AAEA,MAAMC,SAAS,GAAG,QAKZ;AAAA;;AAAA,MALa;AACjBC,IAAAA,SADiB;AAEjBC,IAAAA,eAFiB;AAGjBC,IAAAA,SAHiB;AAIjBC,IAAAA;AAJiB,GAKb;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAASZ,SAAS,EAAxB;;AAEA,QAAMa,kBAAkB,GAAG,MAAOC,CAAP,IAAa;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,UAAU,GAAG,MAAML,QAAQ,CAC/BR,cAAc,CAACM,KAAD,EAAQJ,SAAR,EAAmBO,EAAnB,EAAuBN,eAAvB,CADiB,CAAjC;AAIAW,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEAR,IAAAA,aAAa,CAACQ,UAAD,CAAb;AACAT,IAAAA,SAAS;AACV,GAVD;;AAYA,QAAMY,iBAAiB,GAAIL,CAAD,IAAO;AAC/BJ,IAAAA,QAAQ,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAGA,sBACE;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAEpB,MAAM,CAACqB,SAAvC;AAAA,4BACE;AACE,MAAA,SAAS,EAAErB,MAAM,CAACsB,SADpB;AAEE,MAAA,WAAW,EAAG,gBAAelB,SAAU,EAFzC;AAGE,MAAA,QAAQ,EAAEc;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,MAAD;AACE,MAAA,QAAQ,EAAC,QADX;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,OAAO,EAAEN,kBAHX;AAIE,MAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxCD;;GAAMT,S;UAOaL,W,EACFC,S;;;KARXI,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"./ReplyForm.module.css\";\nimport Button from \"../../../UI/Button/Button\";\nimport { replyToComment } from \"../../../../actions/suggestions\";\n\nconst ReplyForm = ({\n  replyUser,\n  parentCommentId,\n  closeForm,\n  updateReplies,\n}) => {\n  const [reply, setReply] = useState(\"\");\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  const handleReplyComment = async (e) => {\n    e.preventDefault();\n    const newReplies = await dispatch(\n      replyToComment(reply, replyUser, id, parentCommentId)\n    );\n\n    console.log(newReplies);\n\n    updateReplies(newReplies);\n    closeForm();\n  };\n\n  const handleReplyChange = (e) => {\n    setReply(e.target.value);\n  };\n  return (\n    <form id=\"add-reply\" className={styles.replyform}>\n      <textarea\n        className={styles.replytext}\n        placeholder={`Replying to @${replyUser}`}\n        onChange={handleReplyChange}\n      ></textarea>\n      <Button\n        btnStyle=\"violet\"\n        form=\"add-reply\"\n        onClick={handleReplyComment}\n        text=\"Post Reply\"\n      />\n    </form>\n  );\n};\n\nexport default ReplyForm;\n"]},"metadata":{},"sourceType":"module"}