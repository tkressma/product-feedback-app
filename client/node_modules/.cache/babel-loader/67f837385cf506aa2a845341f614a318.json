{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Tag/Tag.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./Tag.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilters, filterSuggestions } from \"../../../actions/suggestions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tag(_ref) {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    sortType,\n    sortOrder\n  } = useSelector(state => state.filters);\n\n  const handleFiltering = () => {\n    // Update the sorting filter for category. This is kept in state so that when a user\n    // decides to use the \"Sort by: most/least upvotes/comments\" filter, the current category\n    // chosen will also be taken into consideration when displaying results.\n    dispatch(setFilters({\n      sortCategory: category.toLowerCase()\n    })); // Filter the suggestions based on the new category.\n\n    dispatch(filterSuggestions({\n      category: category.toLowerCase()\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: styles.tag,\n    onClick: handleFiltering,\n    children: category\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tag, \"AaVW1dv6vZAGW50asHRw/9x7MJs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Tag/Tag.js"],"names":["styles","useDispatch","useSelector","setFilters","filterSuggestions","Tag","category","dispatch","sortType","sortOrder","state","filters","handleFiltering","sortCategory","toLowerCase","tag"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,8BAA9C;;AACA,eAAe,SAASC,GAAT,OAA2B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA3C;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5B;AACA;AACA;AACAL,IAAAA,QAAQ,CACNJ,UAAU,CAAC;AACTU,MAAAA,YAAY,EAAEP,QAAQ,CAACQ,WAAT;AADL,KAAD,CADJ,CAAR,CAJ4B,CAU5B;;AACAP,IAAAA,QAAQ,CACNH,iBAAiB,CAAC;AAChBE,MAAAA,QAAQ,EAAEA,QAAQ,CAACQ,WAAT;AADM,KAAD,CADX,CAAR;AAKD,GAhBD;;AAkBA,sBACE;AAAQ,IAAA,SAAS,EAAEd,MAAM,CAACe,GAA1B;AAA+B,IAAA,OAAO,EAAEH,eAAxC;AAAA,cACGN;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA3BuBD,G;UACLJ,W,EACeC,W;;;KAFVG,G","sourcesContent":["import styles from \"./Tag.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilters, filterSuggestions } from \"../../../actions/suggestions\";\nexport default function Tag({ category }) {\n  const dispatch = useDispatch();\n  const { sortType, sortOrder } = useSelector((state) => state.filters);\n\n  const handleFiltering = () => {\n    // Update the sorting filter for category. This is kept in state so that when a user\n    // decides to use the \"Sort by: most/least upvotes/comments\" filter, the current category\n    // chosen will also be taken into consideration when displaying results.\n    dispatch(\n      setFilters({\n        sortCategory: category.toLowerCase(),\n      })\n    );\n\n    // Filter the suggestions based on the new category.\n    dispatch(\n      filterSuggestions({\n        category: category.toLowerCase(),\n      })\n    );\n  };\n\n  return (\n    <button className={styles.tag} onClick={handleFiltering}>\n      {category}\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}