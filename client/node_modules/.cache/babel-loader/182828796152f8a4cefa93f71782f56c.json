{"ast":null,"code":"import _objectSpread from\"/home/tom/Desktop/product-feedback-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/tom/Desktop/product-feedback-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{useNavigate,useParams}from\"react-router-dom\";import{getSuggestion,updateSuggestion}from\"../../actions/suggestions\";import styles from\"./Edit.module.css\";import Heading from\"../UI/Heading/Heading\";import Form from\"../UI/Forms/Form/Form\";import FormTextInput from\"../UI/Forms/FormTextInput/FormTextInput\";import FormSelectInput from\"../UI/Forms/FormSelectInput/FormSelectInput\";import editIcon from\"../../assets/shared/icon-edit-feedback.svg\";import Button from\"../UI/Button/Button\";import checkIcon from\"../../assets/shared/icon-check.svg\";import{SpinnerCircularFixed}from\"spinners-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Edit(){var dispatch=useDispatch();var navigate=useNavigate();var _useParams=useParams(),id=_useParams.id;// Retrieve the data for the suggestion being edited\nvar _useSelector=useSelector(function(state){return state.suggestions;}),suggestion=_useSelector.suggestion,isLoading=_useSelector.isLoading;// Did the user submit the form?\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),submitted=_useState2[0],setSubmitted=_useState2[1];// A base state placeholder object for editing a form.\nvar _useState3=useState({title:\"\",category:\"\",description:\"\"}),_useState4=_slicedToArray(_useState3,2),updatedSuggestion=_useState4[0],setUpdatedSuggestion=_useState4[1];// If a user is not logged in upon trying to access this form,\n// redirect them to sign in/sign up.\nvar user=JSON.parse(localStorage.getItem(\"profile\"));useEffect(function(){var _user$result;if(!(user!==null&&user!==void 0&&(_user$result=user.result)!==null&&_user$result!==void 0&&_user$result.name)){navigate(\"/auth\");}});// Retrieve the suggestion that is being edited\nuseEffect(function(){dispatch(getSuggestion(id));},[id]);// Update the suggestion information being displayed in\n// the editing form based on the dispatch redux state change\nuseEffect(function(){setUpdatedSuggestion(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{title:suggestion===null||suggestion===void 0?void 0:suggestion.title,category:suggestion===null||suggestion===void 0?void 0:suggestion.category,description:suggestion===null||suggestion===void 0?void 0:suggestion.description});});},[suggestion]);// Displays a loading circle if the form submission is still processing in the back end.\n// Once finished, it will display a check mark.\nvar submissionConfirmation=isLoading?/*#__PURE__*/_jsx(SpinnerCircularFixed,{color:\"hsl(230, 76%, 59%)\",secondaryColor:\"#f2f5ff\",style:{height:43.98,margin:\"0 auto\"}}):/*#__PURE__*/_jsx(\"img\",{src:checkIcon,className:styles[\"loading--check\"],alt:\"Checkmark - action is completed\"});// Displays a loading circle if the suggestion data from the back end is still being retrieved.\nvar loadingSuggestionInfo=/*#__PURE__*/_jsx(SpinnerCircularFixed,{color:\"hsl(230,76%,59%)\",secondaryColor:\"#f2f5ff\",style:{maxHeight:\"35px\"}});// After the feedback is added, wait 1.5 seconds before redirecting\n// back to the previous page.\nuseEffect(function(){if(!isLoading&&submitted){var timerFunc=setTimeout(function(){return navigate(-1);},1500);return function(){return clearTimeout(timerFunc);};}});var handleSubmit=function handleSubmit(event){event.preventDefault();setSubmitted(true);dispatch(updateSuggestion(id,updatedSuggestion));};return/*#__PURE__*/_jsxs(Form,{icon:editIcon,backButtonDestination:\"/\",children:[/*#__PURE__*/_jsxs(Heading,{type:\"h1\",children:[\"Edit Your Feedback \",isLoading&&!submitted&&loadingSuggestionInfo]}),/*#__PURE__*/_jsxs(\"form\",{id:\"form\",children:[/*#__PURE__*/_jsx(FormTextInput,{inputId:\"title\",value:isLoading&&!submitted?\"\":updatedSuggestion.title,labelHeading:\"Feedback Title\",labelCaption:\"Add a short, descriptive headline\",onChange:function onChange(event){return setUpdatedSuggestion(_objectSpread(_objectSpread({},updatedSuggestion),{},{title:event.target.value}));}}),/*#__PURE__*/_jsx(FormSelectInput,{inputId:\"category\",value:isLoading&&!submitted?\"Featured\":updatedSuggestion.category,labelHeading:\"Category\",labelCaption:\"Choose a category for your feedback\",onChange:function onChange(event){return setUpdatedSuggestion(_objectSpread(_objectSpread({},updatedSuggestion),{},{category:event.target.value}));}}),/*#__PURE__*/_jsx(FormTextInput,{inputId:\"detail\",value:isLoading&&!submitted?\"\":updatedSuggestion.description,large:\"true\",labelHeading:\"Feedback Detail\",labelCaption:\"Include any specific comments on what should be improved, added, etc.\",onChange:function onChange(event){return setUpdatedSuggestion(_objectSpread(_objectSpread({},updatedSuggestion),{},{description:event.target.value}));}}),/*#__PURE__*/_jsx(\"div\",{className:styles[\"button__container\"],children:submitted?submissionConfirmation:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{btnStyle:\"violet\",text:\"Submit Changes\",form:\"form\",onClick:handleSubmit}),/*#__PURE__*/_jsx(Button,{btnStyle:\"navy-blue\",text:\"Cancel\",onClick:handleSubmit,link:true,destination:\"/\"})]})})]})]});}","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/Edit/Edit.js"],"names":["useEffect","useState","useDispatch","useSelector","useNavigate","useParams","getSuggestion","updateSuggestion","styles","Heading","Form","FormTextInput","FormSelectInput","editIcon","Button","checkIcon","SpinnerCircularFixed","Edit","dispatch","navigate","id","state","suggestions","suggestion","isLoading","submitted","setSubmitted","title","category","description","updatedSuggestion","setUpdatedSuggestion","user","JSON","parse","localStorage","getItem","result","name","prevState","submissionConfirmation","height","margin","loadingSuggestionInfo","maxHeight","timerFunc","setTimeout","clearTimeout","handleSubmit","event","preventDefault","target","value"],"mappings":"qQAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,CAAsBC,SAAtB,KAAuC,kBAAvC,CACA,OAASC,aAAT,CAAwBC,gBAAxB,KAAgD,2BAAhD,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,aAAP,KAA0B,yCAA1B,CACA,MAAOC,CAAAA,eAAP,KAA4B,6CAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4CAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CAEA,OAASC,oBAAT,KAAqC,gBAArC,C,6IAEA,cAAe,SAASC,CAAAA,IAAT,EAAgB,CAC7B,GAAMC,CAAAA,QAAQ,CAAGhB,WAAW,EAA5B,CACA,GAAMiB,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CACA,eAAeC,SAAS,EAAxB,CAAQe,EAAR,YAAQA,EAAR,CAEA;AACA,iBAAkCjB,WAAW,CAAC,SAACkB,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAjB,EAAD,CAA7C,CAAQC,UAAR,cAAQA,UAAR,CAAoBC,SAApB,cAAoBA,SAApB,CACA;AACA,cAAkCvB,QAAQ,CAAC,KAAD,CAA1C,wCAAOwB,SAAP,eAAkBC,YAAlB,eACA;AACA,eAAkDzB,QAAQ,CAAC,CACzD0B,KAAK,CAAE,EADkD,CAEzDC,QAAQ,CAAE,EAF+C,CAGzDC,WAAW,CAAE,EAH4C,CAAD,CAA1D,yCAAOC,iBAAP,eAA0BC,oBAA1B,eAMA;AACA;AACA,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb,CACApC,SAAS,CAAC,UAAM,kBACd,GAAI,EAACgC,IAAD,SAACA,IAAD,yBAACA,IAAI,CAAEK,MAAP,iCAAC,aAAcC,IAAf,CAAJ,CAAyB,CACvBnB,QAAQ,CAAC,OAAD,CAAR,CACD,CACF,CAJQ,CAAT,CAMA;AACAnB,SAAS,CAAC,UAAM,CACdkB,QAAQ,CAACZ,aAAa,CAACc,EAAD,CAAd,CAAR,CACD,CAFQ,CAEN,CAACA,EAAD,CAFM,CAAT,CAIA;AACA;AACApB,SAAS,CAAC,UAAM,CACd+B,oBAAoB,CAAC,SAACQ,SAAD,wCAChBA,SADgB,MAEnBZ,KAAK,CAAEJ,UAAF,SAAEA,UAAF,iBAAEA,UAAU,CAAEI,KAFA,CAGnBC,QAAQ,CAAEL,UAAF,SAAEA,UAAF,iBAAEA,UAAU,CAAEK,QAHH,CAInBC,WAAW,CAAEN,UAAF,SAAEA,UAAF,iBAAEA,UAAU,CAAEM,WAJN,IAAD,CAApB,CAMD,CAPQ,CAON,CAACN,UAAD,CAPM,CAAT,CASA;AACA;AACA,GAAMiB,CAAAA,sBAAsB,CAAGhB,SAAS,cACtC,KAAC,oBAAD,EACE,KAAK,CAAC,oBADR,CAEE,cAAc,CAAC,SAFjB,CAGE,KAAK,CAAE,CAAEiB,MAAM,CAAE,KAAV,CAAiBC,MAAM,CAAE,QAAzB,CAHT,EADsC,cAOtC,YACE,GAAG,CAAE3B,SADP,CAEE,SAAS,CAAEP,MAAM,CAAC,gBAAD,CAFnB,CAGE,GAAG,CAAC,iCAHN,EAPF,CAcA;AACA,GAAMmC,CAAAA,qBAAqB,cACzB,KAAC,oBAAD,EACE,KAAK,CAAC,kBADR,CAEE,cAAc,CAAC,SAFjB,CAGE,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAb,CAHT,EADF,CAQA;AACA;AACA5C,SAAS,CAAC,UAAM,CACd,GAAI,CAACwB,SAAD,EAAcC,SAAlB,CAA6B,CAC3B,GAAIoB,CAAAA,SAAS,CAAGC,UAAU,CAAC,iBAAM3B,CAAAA,QAAQ,CAAC,CAAC,CAAF,CAAd,EAAD,CAAqB,IAArB,CAA1B,CACA,MAAO,kBAAM4B,CAAAA,YAAY,CAACF,SAAD,CAAlB,EAAP,CACD,CACF,CALQ,CAAT,CAOA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BA,KAAK,CAACC,cAAN,GACAxB,YAAY,CAAC,IAAD,CAAZ,CACAR,QAAQ,CAACX,gBAAgB,CAACa,EAAD,CAAKU,iBAAL,CAAjB,CAAR,CACD,CAJD,CAMA,mBACE,MAAC,IAAD,EAAM,IAAI,CAAEjB,QAAZ,CAAsB,qBAAqB,CAAC,GAA5C,wBACE,MAAC,OAAD,EAAS,IAAI,CAAC,IAAd,iCACsBW,SAAS,EAAI,CAACC,SAAd,EAA2BkB,qBADjD,GADF,cAKE,cAAM,EAAE,CAAC,MAAT,wBACE,KAAC,aAAD,EACE,OAAO,CAAC,OADV,CAEE,KAAK,CAAEnB,SAAS,EAAI,CAACC,SAAd,CAA0B,EAA1B,CAA+BK,iBAAiB,CAACH,KAF1D,CAGE,YAAY,CAAC,gBAHf,CAIE,YAAY,CAAC,mCAJf,CAKE,QAAQ,CAAE,kBAACsB,KAAD,QACRlB,CAAAA,oBAAoB,gCACfD,iBADe,MAElBH,KAAK,CAAEsB,KAAK,CAACE,MAAN,CAAaC,KAFF,GADZ,EALZ,EADF,cAaE,KAAC,eAAD,EACE,OAAO,CAAC,UADV,CAEE,KAAK,CACH5B,SAAS,EAAI,CAACC,SAAd,CAA0B,UAA1B,CAAuCK,iBAAiB,CAACF,QAH7D,CAKE,YAAY,CAAC,UALf,CAME,YAAY,CAAC,qCANf,CAOE,QAAQ,CAAE,kBAACqB,KAAD,QACRlB,CAAAA,oBAAoB,gCACfD,iBADe,MAElBF,QAAQ,CAAEqB,KAAK,CAACE,MAAN,CAAaC,KAFL,GADZ,EAPZ,EAbF,cA2BE,KAAC,aAAD,EACE,OAAO,CAAC,QADV,CAEE,KAAK,CAAE5B,SAAS,EAAI,CAACC,SAAd,CAA0B,EAA1B,CAA+BK,iBAAiB,CAACD,WAF1D,CAGE,KAAK,CAAC,MAHR,CAIE,YAAY,CAAC,iBAJf,CAKE,YAAY,CAAC,uEALf,CAME,QAAQ,CAAE,kBAACoB,KAAD,QACRlB,CAAAA,oBAAoB,gCACfD,iBADe,MAElBD,WAAW,CAAEoB,KAAK,CAACE,MAAN,CAAaC,KAFR,GADZ,EANZ,EA3BF,cAyCE,YAAK,SAAS,CAAE5C,MAAM,CAAC,mBAAD,CAAtB,UACGiB,SAAS,CACRe,sBADQ,cAGR,wCACE,KAAC,MAAD,EACE,QAAQ,CAAC,QADX,CAEE,IAAI,CAAC,gBAFP,CAGE,IAAI,CAAC,MAHP,CAIE,OAAO,CAAEQ,YAJX,EADF,cAQE,KAAC,MAAD,EACE,QAAQ,CAAC,WADX,CAEE,IAAI,CAAC,QAFP,CAGE,OAAO,CAAEA,YAHX,CAIE,IAAI,CAAE,IAJR,CAKE,WAAW,CAAC,GALd,EARF,GAJJ,EAzCF,GALF,GADF,CAwED","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getSuggestion, updateSuggestion } from \"../../actions/suggestions\";\nimport styles from \"./Edit.module.css\";\nimport Heading from \"../UI/Heading/Heading\";\nimport Form from \"../UI/Forms/Form/Form\";\nimport FormTextInput from \"../UI/Forms/FormTextInput/FormTextInput\";\nimport FormSelectInput from \"../UI/Forms/FormSelectInput/FormSelectInput\";\nimport editIcon from \"../../assets/shared/icon-edit-feedback.svg\";\nimport Button from \"../UI/Button/Button\";\nimport checkIcon from \"../../assets/shared/icon-check.svg\";\n\nimport { SpinnerCircularFixed } from \"spinners-react\";\n\nexport default function Edit() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  // Retrieve the data for the suggestion being edited\n  const { suggestion, isLoading } = useSelector((state) => state.suggestions);\n  // Did the user submit the form?\n  const [submitted, setSubmitted] = useState(false);\n  // A base state placeholder object for editing a form.\n  const [updatedSuggestion, setUpdatedSuggestion] = useState({\n    title: \"\",\n    category: \"\",\n    description: \"\",\n  });\n\n  // If a user is not logged in upon trying to access this form,\n  // redirect them to sign in/sign up.\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  useEffect(() => {\n    if (!user?.result?.name) {\n      navigate(\"/auth\");\n    }\n  });\n\n  // Retrieve the suggestion that is being edited\n  useEffect(() => {\n    dispatch(getSuggestion(id));\n  }, [id]);\n\n  // Update the suggestion information being displayed in\n  // the editing form based on the dispatch redux state change\n  useEffect(() => {\n    setUpdatedSuggestion((prevState) => ({\n      ...prevState,\n      title: suggestion?.title,\n      category: suggestion?.category,\n      description: suggestion?.description,\n    }));\n  }, [suggestion]);\n\n  // Displays a loading circle if the form submission is still processing in the back end.\n  // Once finished, it will display a check mark.\n  const submissionConfirmation = isLoading ? (\n    <SpinnerCircularFixed\n      color=\"hsl(230, 76%, 59%)\"\n      secondaryColor=\"#f2f5ff\"\n      style={{ height: 43.98, margin: \"0 auto\" }}\n    />\n  ) : (\n    <img\n      src={checkIcon}\n      className={styles[\"loading--check\"]}\n      alt=\"Checkmark - action is completed\"\n    />\n  );\n\n  // Displays a loading circle if the suggestion data from the back end is still being retrieved.\n  const loadingSuggestionInfo = (\n    <SpinnerCircularFixed\n      color=\"hsl(230,76%,59%)\"\n      secondaryColor=\"#f2f5ff\"\n      style={{ maxHeight: \"35px\" }}\n    />\n  );\n\n  // After the feedback is added, wait 1.5 seconds before redirecting\n  // back to the previous page.\n  useEffect(() => {\n    if (!isLoading && submitted) {\n      let timerFunc = setTimeout(() => navigate(-1), 1500);\n      return () => clearTimeout(timerFunc);\n    }\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSubmitted(true);\n    dispatch(updateSuggestion(id, updatedSuggestion));\n  };\n\n  return (\n    <Form icon={editIcon} backButtonDestination=\"/\">\n      <Heading type=\"h1\">\n        Edit Your Feedback {isLoading && !submitted && loadingSuggestionInfo}\n      </Heading>\n\n      <form id=\"form\">\n        <FormTextInput\n          inputId=\"title\"\n          value={isLoading && !submitted ? \"\" : updatedSuggestion.title}\n          labelHeading=\"Feedback Title\"\n          labelCaption=\"Add a short, descriptive headline\"\n          onChange={(event) =>\n            setUpdatedSuggestion({\n              ...updatedSuggestion,\n              title: event.target.value,\n            })\n          }\n        />\n        <FormSelectInput\n          inputId=\"category\"\n          value={\n            isLoading && !submitted ? \"Featured\" : updatedSuggestion.category\n          }\n          labelHeading=\"Category\"\n          labelCaption=\"Choose a category for your feedback\"\n          onChange={(event) =>\n            setUpdatedSuggestion({\n              ...updatedSuggestion,\n              category: event.target.value,\n            })\n          }\n        />\n        <FormTextInput\n          inputId=\"detail\"\n          value={isLoading && !submitted ? \"\" : updatedSuggestion.description}\n          large=\"true\"\n          labelHeading=\"Feedback Detail\"\n          labelCaption=\"Include any specific comments on what should be improved, added, etc.\"\n          onChange={(event) =>\n            setUpdatedSuggestion({\n              ...updatedSuggestion,\n              description: event.target.value,\n            })\n          }\n        />\n\n        <div className={styles[\"button__container\"]}>\n          {submitted ? (\n            submissionConfirmation\n          ) : (\n            <>\n              <Button\n                btnStyle=\"violet\"\n                text=\"Submit Changes\"\n                form=\"form\"\n                onClick={handleSubmit}\n              />\n\n              <Button\n                btnStyle=\"navy-blue\"\n                text=\"Cancel\"\n                onClick={handleSubmit}\n                link={true}\n                destination=\"/\"\n              />\n            </>\n          )}\n        </div>\n      </form>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}