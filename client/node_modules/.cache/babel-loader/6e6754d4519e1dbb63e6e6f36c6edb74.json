{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/FormSelectInput/FormSelectInput.js\";\nimport styles from \"../FormInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FormSelectInput(_ref) {\n  let {\n    inputId,\n    value,\n    labelHeading,\n    labelCaption,\n    onChange\n  } = _ref;\n  const categories = [\"Feature\", \"UI\", \"UX\", \"Enhancement\", \"Bug\"];\n  const status = [\"Suggestion\", \"Planned\", \"In-Progress\", \"Live\"];\n  const optionsArray = inputId === \"category\" ? categories : status;\n  let formattedValue = value === \"ui\" || value === \"ux\" ? value.toUpperCase() : value.charAt(0).toUpperCase() + value.slice(1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: inputId,\n      className: styles[\"caption-bold\"],\n      children: labelHeading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: inputId,\n      className: styles.caption,\n      children: labelCaption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: inputId,\n      id: inputId,\n      onChange: onChange,\n      children: optionsArray.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: formattedValue,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = FormSelectInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormSelectInput\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Forms/FormSelectInput/FormSelectInput.js"],"names":["styles","FormSelectInput","inputId","value","labelHeading","labelCaption","onChange","categories","status","optionsArray","formattedValue","toUpperCase","charAt","slice","caption","map","option","index"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,yBAAnB;;;AACA,eAAe,SAASC,eAAT,OAMZ;AAAA,MANqC;AACtCC,IAAAA,OADsC;AAEtCC,IAAAA,KAFsC;AAGtCC,IAAAA,YAHsC;AAItCC,IAAAA,YAJsC;AAKtCC,IAAAA;AALsC,GAMrC;AACD,QAAMC,UAAU,GAAG,CAAC,SAAD,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,aAAxB,EAAuC,KAAvC,CAAnB;AACA,QAAMC,MAAM,GAAG,CAAC,YAAD,EAAe,SAAf,EAA0B,aAA1B,EAAyC,MAAzC,CAAf;AACA,QAAMC,YAAY,GAAGP,OAAO,KAAK,UAAZ,GAAyBK,UAAzB,GAAsCC,MAA3D;AAEA,MAAIE,cAAc,GAChBP,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,IAA5B,GACIA,KAAK,CAACQ,WAAN,EADJ,GAEIR,KAAK,CAACS,MAAN,CAAa,CAAb,EAAgBD,WAAhB,KAAgCR,KAAK,CAACU,KAAN,CAAY,CAAZ,CAHtC;AAKA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEX,OAAhB;AAAyB,MAAA,SAAS,EAAEF,MAAM,CAAC,cAAD,CAA1C;AAAA,gBACGI;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAO,MAAA,OAAO,EAAEF,OAAhB;AAAyB,MAAA,SAAS,EAAEF,MAAM,CAACc,OAA3C;AAAA,gBACGT;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAQ,MAAA,IAAI,EAAEH,OAAd;AAAuB,MAAA,EAAE,EAAEA,OAA3B;AAAoC,MAAA,QAAQ,EAAEI,QAA9C;AAAA,gBACGG,YAAY,CAACM,GAAb,CAAiB,CAACC,MAAD,EAASC,KAAT,kBAChB;AAAoB,QAAA,KAAK,EAAEP,cAA3B;AAAA,kBACGM;AADH,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAiBD;KAjCuBhB,e","sourcesContent":["import styles from \"../FormInput.module.css\";\nexport default function FormSelectInput({\n  inputId,\n  value,\n  labelHeading,\n  labelCaption,\n  onChange,\n}) {\n  const categories = [\"Feature\", \"UI\", \"UX\", \"Enhancement\", \"Bug\"];\n  const status = [\"Suggestion\", \"Planned\", \"In-Progress\", \"Live\"];\n  const optionsArray = inputId === \"category\" ? categories : status;\n\n  let formattedValue =\n    value === \"ui\" || value === \"ux\"\n      ? value.toUpperCase()\n      : value.charAt(0).toUpperCase() + value.slice(1);\n\n  return (\n    <>\n      <label htmlFor={inputId} className={styles[\"caption-bold\"]}>\n        {labelHeading}\n      </label>\n      <label htmlFor={inputId} className={styles.caption}>\n        {labelCaption}\n      </label>\n      <select name={inputId} id={inputId} onChange={onChange}>\n        {optionsArray.map((option, index) => (\n          <option key={index} value={formattedValue}>\n            {option}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}