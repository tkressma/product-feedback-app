{"ast":null,"code":"import styles from\"./Headings.module.css\";import{Link}from\"react-router-dom\";// This reusable heading takes in a few parameters:\n// type: The styling (and optionally tag) that the heading component is going to use (h1, h2, h3).\n// white: If true, the color of the font is white. Else, it is the default heading color.\n// headingTag: If true, use the associated heading tag determined by the value of type. Defaulted to true.\nimport{jsx as _jsx}from\"react/jsx-runtime\";var Heading=function Heading(_ref){var type=_ref.type,white=_ref.white,_ref$headingTag=_ref.headingTag,headingTag=_ref$headingTag===void 0?true:_ref$headingTag,_ref$link=_ref.link,link=_ref$link===void 0?false:_ref$link,destination=_ref.destination,children=_ref.children;// This allows us to set the HTML tag depending on the value of type.\n// If headingTag is false, then it is simply a styled paragraph element.\nvar ElementTag=headingTag?type:\"p\";// Allows us to select the CSS based on type value\nvar headingStyle=\"heading--\".concat(type);var headingStyling=\"\".concat(styles.heading,\" \\n  \").concat(styles[headingStyle],\" \\n  \").concat(white&&styles.white);if(link){return/*#__PURE__*/_jsx(Link,{to:destination,className:headingStyling,children:children});}else{return/*#__PURE__*/_jsx(ElementTag,{className:headingStyling,children:children});}};export default Heading;","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Heading/Heading.js"],"names":["styles","Link","Heading","type","white","headingTag","link","destination","children","ElementTag","headingStyle","headingStyling","heading"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,uBAAnB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA;AACA;AACA;AACA;2CACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAOV,IANJC,CAAAA,IAMI,MANJA,IAMI,CALJC,KAKI,MALJA,KAKI,sBAJJC,UAII,CAJJA,UAII,0BAJS,IAIT,gCAHJC,IAGI,CAHJA,IAGI,oBAHG,KAGH,WAFJC,WAEI,MAFJA,WAEI,CADJC,QACI,MADJA,QACI,CACJ;AACA;AACA,GAAMC,CAAAA,UAAU,CAAGJ,UAAU,CAAGF,IAAH,CAAU,GAAvC,CAEA;AACA,GAAMO,CAAAA,YAAY,oBAAeP,IAAf,CAAlB,CAEA,GAAMQ,CAAAA,cAAc,WAAMX,MAAM,CAACY,OAAb,iBAClBZ,MAAM,CAACU,YAAD,CADY,iBAElBN,KAAK,EAAIJ,MAAM,CAACI,KAFE,CAApB,CAIA,GAAIE,IAAJ,CAAU,CACR,mBACE,KAAC,IAAD,EAAM,EAAE,CAAEC,WAAV,CAAuB,SAAS,CAAEI,cAAlC,UACGH,QADH,EADF,CAKD,CAND,IAMO,CACL,mBAAO,KAAC,UAAD,EAAY,SAAS,CAAEG,cAAvB,UAAwCH,QAAxC,EAAP,CACD,CACF,CA5BD,CA8BA,cAAeN,CAAAA,OAAf","sourcesContent":["import styles from \"./Headings.module.css\";\nimport { Link } from \"react-router-dom\";\n// This reusable heading takes in a few parameters:\n// type: The styling (and optionally tag) that the heading component is going to use (h1, h2, h3).\n// white: If true, the color of the font is white. Else, it is the default heading color.\n// headingTag: If true, use the associated heading tag determined by the value of type. Defaulted to true.\nconst Heading = ({\n  type,\n  white,\n  headingTag = true,\n  link = false,\n  destination,\n  children,\n}) => {\n  // This allows us to set the HTML tag depending on the value of type.\n  // If headingTag is false, then it is simply a styled paragraph element.\n  const ElementTag = headingTag ? type : \"p\";\n\n  // Allows us to select the CSS based on type value\n  const headingStyle = `heading--${type}`;\n\n  const headingStyling = `${styles.heading} \n  ${styles[headingStyle]} \n  ${white && styles.white}`;\n\n  if (link) {\n    return (\n      <Link to={destination} className={headingStyling}>\n        {children}\n      </Link>\n    );\n  } else {\n    return <ElementTag className={headingStyling}>{children}</ElementTag>;\n  }\n};\n\nexport default Heading;\n"]},"metadata":{},"sourceType":"module"}