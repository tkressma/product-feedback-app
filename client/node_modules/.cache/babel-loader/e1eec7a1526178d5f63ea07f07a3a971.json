{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/product-feedback-app/client/src/components/UI/Tag/Tag.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./Tag.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilters, filterSuggestions, getSuggestions } from \"../../../actions/suggestions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tag(_ref) {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    sortType,\n    sortOrder\n  } = useSelector(state => state.filters); // If the selected category is \"All\", return all of the suggestions. Otherwise,\n  // filter the suggestions based on the category selected.\n\n  const handleFiltering = () => {\n    if (category === \"all\") {\n      dispatch(getSuggestions());\n    } else {\n      dispatch(setFilters({\n        sortCategory: category\n      }));\n      dispatch(filterSuggestions(category, sortType, sortOrder));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: styles.tag,\n    onClick: handleFiltering,\n    children: category.charAt(0).toUpperCase() + category.slice(1)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tag, \"AaVW1dv6vZAGW50asHRw/9x7MJs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"sources":["/home/tom/Desktop/product-feedback-app/client/src/components/UI/Tag/Tag.js"],"names":["styles","useDispatch","useSelector","setFilters","filterSuggestions","getSuggestions","Tag","category","dispatch","sortType","sortOrder","state","filters","handleFiltering","sortCategory","tag","charAt","toUpperCase","slice"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,UADF,EAEEC,iBAFF,EAGEC,cAHF,QAIO,8BAJP;;AAKA,eAAe,SAASC,GAAT,OAA2B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA3C,CAFwC,CAIxC;AACA;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIN,QAAQ,KAAK,KAAjB,EAAwB;AACtBC,MAAAA,QAAQ,CAACH,cAAc,EAAf,CAAR;AACD,KAFD,MAEO;AACLG,MAAAA,QAAQ,CAACL,UAAU,CAAC;AAAEW,QAAAA,YAAY,EAAEP;AAAhB,OAAD,CAAX,CAAR;AACAC,MAAAA,QAAQ,CAACJ,iBAAiB,CAACG,QAAD,EAAWE,QAAX,EAAqBC,SAArB,CAAlB,CAAR;AACD;AACF,GAPD;;AASA,sBACE;AAAQ,IAAA,SAAS,EAAEV,MAAM,CAACe,GAA1B;AAA+B,IAAA,OAAO,EAAEF,eAAxC;AAAA,cAEGN,QAAQ,CAACS,MAAT,CAAgB,CAAhB,EAAmBC,WAAnB,KAAmCV,QAAQ,CAACW,KAAT,CAAe,CAAf;AAFtC;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GArBuBZ,G;UACLL,W,EACeC,W;;;KAFVI,G","sourcesContent":["import styles from \"./Tag.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setFilters,\n  filterSuggestions,\n  getSuggestions,\n} from \"../../../actions/suggestions\";\nexport default function Tag({ category }) {\n  const dispatch = useDispatch();\n  const { sortType, sortOrder } = useSelector((state) => state.filters);\n\n  // If the selected category is \"All\", return all of the suggestions. Otherwise,\n  // filter the suggestions based on the category selected.\n  const handleFiltering = () => {\n    if (category === \"all\") {\n      dispatch(getSuggestions());\n    } else {\n      dispatch(setFilters({ sortCategory: category }));\n      dispatch(filterSuggestions(category, sortType, sortOrder));\n    }\n  };\n\n  return (\n    <button className={styles.tag} onClick={handleFiltering}>\n      {/* Capitalize the first letter of the category */}\n      {category.charAt(0).toUpperCase() + category.slice(1)}\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}